<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.neu.hospital.dao.PrescriptiondetailDao">
  <resultMap id="BaseResultMap" type="edu.neu.hospital.bean.Prescriptiondetail">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="prescriptionID" jdbcType="INTEGER" property="prescriptionid" />
    <result column="drugID" jdbcType="INTEGER" property="drugid" />
    <result column="usage" jdbcType="VARCHAR" property="usage" />
    <result column="dosage" jdbcType="DECIMAL" property="dosage" />
    <result column="frequency" jdbcType="INTEGER" property="frequency" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="medication" jdbcType="VARCHAR" property="medication" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="reserve1" jdbcType="VARCHAR" property="reserve1" />
    <result column="reserve2" jdbcType="VARCHAR" property="reserve2" />
    <result column="reserve3" jdbcType="VARCHAR" property="reserve3" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, prescriptionID, drugID, `usage`, dosage, frequency, quantity, medication, `status`, 
    reserve1, reserve2, reserve3
  </sql>
  <select id="selectByExample" parameterType="edu.neu.hospital.example.PrescriptiondetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from prescriptiondetail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from prescriptiondetail
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from prescriptiondetail
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="edu.neu.hospital.example.PrescriptiondetailExample">
    delete from prescriptiondetail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="edu.neu.hospital.bean.Prescriptiondetail" useGeneratedKeys="true">
    insert into prescriptiondetail (prescriptionID, drugID, `usage`, 
      dosage, frequency, quantity, 
      medication, `status`, reserve1, 
      reserve2, reserve3)
    values (#{prescriptionid,jdbcType=INTEGER}, #{drugid,jdbcType=INTEGER}, #{usage,jdbcType=VARCHAR}, 
      #{dosage,jdbcType=DECIMAL}, #{frequency,jdbcType=INTEGER}, #{quantity,jdbcType=INTEGER}, 
      #{medication,jdbcType=VARCHAR}, #{status,jdbcType=CHAR}, #{reserve1,jdbcType=VARCHAR}, 
      #{reserve2,jdbcType=VARCHAR}, #{reserve3,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="edu.neu.hospital.bean.Prescriptiondetail" useGeneratedKeys="true">
    insert into prescriptiondetail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="prescriptionid != null">
        prescriptionID,
      </if>
      <if test="drugid != null">
        drugID,
      </if>
      <if test="usage != null">
        `usage`,
      </if>
      <if test="dosage != null">
        dosage,
      </if>
      <if test="frequency != null">
        frequency,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="medication != null">
        medication,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="reserve1 != null">
        reserve1,
      </if>
      <if test="reserve2 != null">
        reserve2,
      </if>
      <if test="reserve3 != null">
        reserve3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="prescriptionid != null">
        #{prescriptionid,jdbcType=INTEGER},
      </if>
      <if test="drugid != null">
        #{drugid,jdbcType=INTEGER},
      </if>
      <if test="usage != null">
        #{usage,jdbcType=VARCHAR},
      </if>
      <if test="dosage != null">
        #{dosage,jdbcType=DECIMAL},
      </if>
      <if test="frequency != null">
        #{frequency,jdbcType=INTEGER},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="medication != null">
        #{medication,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="reserve1 != null">
        #{reserve1,jdbcType=VARCHAR},
      </if>
      <if test="reserve2 != null">
        #{reserve2,jdbcType=VARCHAR},
      </if>
      <if test="reserve3 != null">
        #{reserve3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.neu.hospital.example.PrescriptiondetailExample" resultType="java.lang.Long">
    select count(*) from prescriptiondetail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update prescriptiondetail
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.prescriptionid != null">
        prescriptionID = #{record.prescriptionid,jdbcType=INTEGER},
      </if>
      <if test="record.drugid != null">
        drugID = #{record.drugid,jdbcType=INTEGER},
      </if>
      <if test="record.usage != null">
        `usage` = #{record.usage,jdbcType=VARCHAR},
      </if>
      <if test="record.dosage != null">
        dosage = #{record.dosage,jdbcType=DECIMAL},
      </if>
      <if test="record.frequency != null">
        frequency = #{record.frequency,jdbcType=INTEGER},
      </if>
      <if test="record.quantity != null">
        quantity = #{record.quantity,jdbcType=INTEGER},
      </if>
      <if test="record.medication != null">
        medication = #{record.medication,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.reserve1 != null">
        reserve1 = #{record.reserve1,jdbcType=VARCHAR},
      </if>
      <if test="record.reserve2 != null">
        reserve2 = #{record.reserve2,jdbcType=VARCHAR},
      </if>
      <if test="record.reserve3 != null">
        reserve3 = #{record.reserve3,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update prescriptiondetail
    set id = #{record.id,jdbcType=INTEGER},
      prescriptionID = #{record.prescriptionid,jdbcType=INTEGER},
      drugID = #{record.drugid,jdbcType=INTEGER},
      `usage` = #{record.usage,jdbcType=VARCHAR},
      dosage = #{record.dosage,jdbcType=DECIMAL},
      frequency = #{record.frequency,jdbcType=INTEGER},
      quantity = #{record.quantity,jdbcType=INTEGER},
      medication = #{record.medication,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=CHAR},
      reserve1 = #{record.reserve1,jdbcType=VARCHAR},
      reserve2 = #{record.reserve2,jdbcType=VARCHAR},
      reserve3 = #{record.reserve3,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.neu.hospital.bean.Prescriptiondetail">
    update prescriptiondetail
    <set>
      <if test="prescriptionid != null">
        prescriptionID = #{prescriptionid,jdbcType=INTEGER},
      </if>
      <if test="drugid != null">
        drugID = #{drugid,jdbcType=INTEGER},
      </if>
      <if test="usage != null">
        `usage` = #{usage,jdbcType=VARCHAR},
      </if>
      <if test="dosage != null">
        dosage = #{dosage,jdbcType=DECIMAL},
      </if>
      <if test="frequency != null">
        frequency = #{frequency,jdbcType=INTEGER},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="medication != null">
        medication = #{medication,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=CHAR},
      </if>
      <if test="reserve1 != null">
        reserve1 = #{reserve1,jdbcType=VARCHAR},
      </if>
      <if test="reserve2 != null">
        reserve2 = #{reserve2,jdbcType=VARCHAR},
      </if>
      <if test="reserve3 != null">
        reserve3 = #{reserve3,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.neu.hospital.bean.Prescriptiondetail">
    update prescriptiondetail
    set prescriptionID = #{prescriptionid,jdbcType=INTEGER},
      drugID = #{drugid,jdbcType=INTEGER},
      `usage` = #{usage,jdbcType=VARCHAR},
      dosage = #{dosage,jdbcType=DECIMAL},
      frequency = #{frequency,jdbcType=INTEGER},
      quantity = #{quantity,jdbcType=INTEGER},
      medication = #{medication,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=CHAR},
      reserve1 = #{reserve1,jdbcType=VARCHAR},
      reserve2 = #{reserve2,jdbcType=VARCHAR},
      reserve3 = #{reserve3,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>