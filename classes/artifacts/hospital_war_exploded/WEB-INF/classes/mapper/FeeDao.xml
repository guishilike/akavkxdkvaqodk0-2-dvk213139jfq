<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.neu.hospital.dao.FeeDao">
  <resultMap id="BaseResultMap" type="edu.neu.hospital.bean.Fee">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="medicalRecordID" jdbcType="INTEGER" property="medicalrecordid" />
    <result column="feeCategoryID" jdbcType="INTEGER" property="feecategoryid" />
    <result column="chargeItemID" jdbcType="INTEGER" property="chargeitemid" />
    <result column="itemType" jdbcType="INTEGER" property="itemtype" />
    <result column="fee" jdbcType="DECIMAL" property="fee" />
    <result column="paymentMethodID" jdbcType="INTEGER" property="paymentmethodid" />
    <result column="appearUserID" jdbcType="INTEGER" property="appearuserid" />
    <result column="changeUserID" jdbcType="INTEGER" property="changeuserid" />
    <result column="feeAppearDate" jdbcType="TIMESTAMP" property="feeappeardate" />
    <result column="feeChangeDate" jdbcType="TIMESTAMP" property="feechangedate" />
    <result column="payStatus" jdbcType="CHAR" property="paystatus" />
    <result column="dateStatus" jdbcType="CHAR" property="datestatus" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="reserve1" jdbcType="VARCHAR" property="reserve1" />
    <result column="reserve2" jdbcType="VARCHAR" property="reserve2" />
    <result column="reserver3" jdbcType="VARCHAR" property="reserver3" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, medicalRecordID, feeCategoryID, chargeItemID, itemType, fee, paymentMethodID, 
    appearUserID, changeUserID, feeAppearDate, feeChangeDate, payStatus, dateStatus, 
    `status`, reserve1, reserve2, reserver3
  </sql>
  <select id="selectByExample" parameterType="edu.neu.hospital.example.FeeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from fee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from fee
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from fee
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="edu.neu.hospital.example.FeeExample">
    delete from fee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="edu.neu.hospital.bean.Fee" useGeneratedKeys="true">
    insert into fee (medicalRecordID, feeCategoryID, chargeItemID, 
      itemType, fee, paymentMethodID, 
      appearUserID, changeUserID, feeAppearDate, 
      feeChangeDate, payStatus, dateStatus, 
      `status`, reserve1, reserve2, 
      reserver3)
    values (#{medicalrecordid,jdbcType=INTEGER}, #{feecategoryid,jdbcType=INTEGER}, #{chargeitemid,jdbcType=INTEGER}, 
      #{itemtype,jdbcType=INTEGER}, #{fee,jdbcType=DECIMAL}, #{paymentmethodid,jdbcType=INTEGER}, 
      #{appearuserid,jdbcType=INTEGER}, #{changeuserid,jdbcType=INTEGER}, #{feeappeardate,jdbcType=TIMESTAMP}, 
      #{feechangedate,jdbcType=TIMESTAMP}, #{paystatus,jdbcType=CHAR}, #{datestatus,jdbcType=CHAR}, 
      #{status,jdbcType=CHAR}, #{reserve1,jdbcType=VARCHAR}, #{reserve2,jdbcType=VARCHAR}, 
      #{reserver3,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="edu.neu.hospital.bean.Fee" useGeneratedKeys="true">
    insert into fee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="medicalrecordid != null">
        medicalRecordID,
      </if>
      <if test="feecategoryid != null">
        feeCategoryID,
      </if>
      <if test="chargeitemid != null">
        chargeItemID,
      </if>
      <if test="itemtype != null">
        itemType,
      </if>
      <if test="fee != null">
        fee,
      </if>
      <if test="paymentmethodid != null">
        paymentMethodID,
      </if>
      <if test="appearuserid != null">
        appearUserID,
      </if>
      <if test="changeuserid != null">
        changeUserID,
      </if>
      <if test="feeappeardate != null">
        feeAppearDate,
      </if>
      <if test="feechangedate != null">
        feeChangeDate,
      </if>
      <if test="paystatus != null">
        payStatus,
      </if>
      <if test="datestatus != null">
        dateStatus,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="reserve1 != null">
        reserve1,
      </if>
      <if test="reserve2 != null">
        reserve2,
      </if>
      <if test="reserver3 != null">
        reserver3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="medicalrecordid != null">
        #{medicalrecordid,jdbcType=INTEGER},
      </if>
      <if test="feecategoryid != null">
        #{feecategoryid,jdbcType=INTEGER},
      </if>
      <if test="chargeitemid != null">
        #{chargeitemid,jdbcType=INTEGER},
      </if>
      <if test="itemtype != null">
        #{itemtype,jdbcType=INTEGER},
      </if>
      <if test="fee != null">
        #{fee,jdbcType=DECIMAL},
      </if>
      <if test="paymentmethodid != null">
        #{paymentmethodid,jdbcType=INTEGER},
      </if>
      <if test="appearuserid != null">
        #{appearuserid,jdbcType=INTEGER},
      </if>
      <if test="changeuserid != null">
        #{changeuserid,jdbcType=INTEGER},
      </if>
      <if test="feeappeardate != null">
        #{feeappeardate,jdbcType=TIMESTAMP},
      </if>
      <if test="feechangedate != null">
        #{feechangedate,jdbcType=TIMESTAMP},
      </if>
      <if test="paystatus != null">
        #{paystatus,jdbcType=CHAR},
      </if>
      <if test="datestatus != null">
        #{datestatus,jdbcType=CHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="reserve1 != null">
        #{reserve1,jdbcType=VARCHAR},
      </if>
      <if test="reserve2 != null">
        #{reserve2,jdbcType=VARCHAR},
      </if>
      <if test="reserver3 != null">
        #{reserver3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.neu.hospital.example.FeeExample" resultType="java.lang.Long">
    select count(*) from fee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update fee
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.medicalrecordid != null">
        medicalRecordID = #{record.medicalrecordid,jdbcType=INTEGER},
      </if>
      <if test="record.feecategoryid != null">
        feeCategoryID = #{record.feecategoryid,jdbcType=INTEGER},
      </if>
      <if test="record.chargeitemid != null">
        chargeItemID = #{record.chargeitemid,jdbcType=INTEGER},
      </if>
      <if test="record.itemtype != null">
        itemType = #{record.itemtype,jdbcType=INTEGER},
      </if>
      <if test="record.fee != null">
        fee = #{record.fee,jdbcType=DECIMAL},
      </if>
      <if test="record.paymentmethodid != null">
        paymentMethodID = #{record.paymentmethodid,jdbcType=INTEGER},
      </if>
      <if test="record.appearuserid != null">
        appearUserID = #{record.appearuserid,jdbcType=INTEGER},
      </if>
      <if test="record.changeuserid != null">
        changeUserID = #{record.changeuserid,jdbcType=INTEGER},
      </if>
      <if test="record.feeappeardate != null">
        feeAppearDate = #{record.feeappeardate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.feechangedate != null">
        feeChangeDate = #{record.feechangedate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.paystatus != null">
        payStatus = #{record.paystatus,jdbcType=CHAR},
      </if>
      <if test="record.datestatus != null">
        dateStatus = #{record.datestatus,jdbcType=CHAR},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.reserve1 != null">
        reserve1 = #{record.reserve1,jdbcType=VARCHAR},
      </if>
      <if test="record.reserve2 != null">
        reserve2 = #{record.reserve2,jdbcType=VARCHAR},
      </if>
      <if test="record.reserver3 != null">
        reserver3 = #{record.reserver3,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update fee
    set id = #{record.id,jdbcType=INTEGER},
      medicalRecordID = #{record.medicalrecordid,jdbcType=INTEGER},
      feeCategoryID = #{record.feecategoryid,jdbcType=INTEGER},
      chargeItemID = #{record.chargeitemid,jdbcType=INTEGER},
      itemType = #{record.itemtype,jdbcType=INTEGER},
      fee = #{record.fee,jdbcType=DECIMAL},
      paymentMethodID = #{record.paymentmethodid,jdbcType=INTEGER},
      appearUserID = #{record.appearuserid,jdbcType=INTEGER},
      changeUserID = #{record.changeuserid,jdbcType=INTEGER},
      feeAppearDate = #{record.feeappeardate,jdbcType=TIMESTAMP},
      feeChangeDate = #{record.feechangedate,jdbcType=TIMESTAMP},
      payStatus = #{record.paystatus,jdbcType=CHAR},
      dateStatus = #{record.datestatus,jdbcType=CHAR},
      `status` = #{record.status,jdbcType=CHAR},
      reserve1 = #{record.reserve1,jdbcType=VARCHAR},
      reserve2 = #{record.reserve2,jdbcType=VARCHAR},
      reserver3 = #{record.reserver3,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.neu.hospital.bean.Fee">
    update fee
    <set>
      <if test="medicalrecordid != null">
        medicalRecordID = #{medicalrecordid,jdbcType=INTEGER},
      </if>
      <if test="feecategoryid != null">
        feeCategoryID = #{feecategoryid,jdbcType=INTEGER},
      </if>
      <if test="chargeitemid != null">
        chargeItemID = #{chargeitemid,jdbcType=INTEGER},
      </if>
      <if test="itemtype != null">
        itemType = #{itemtype,jdbcType=INTEGER},
      </if>
      <if test="fee != null">
        fee = #{fee,jdbcType=DECIMAL},
      </if>
      <if test="paymentmethodid != null">
        paymentMethodID = #{paymentmethodid,jdbcType=INTEGER},
      </if>
      <if test="appearuserid != null">
        appearUserID = #{appearuserid,jdbcType=INTEGER},
      </if>
      <if test="changeuserid != null">
        changeUserID = #{changeuserid,jdbcType=INTEGER},
      </if>
      <if test="feeappeardate != null">
        feeAppearDate = #{feeappeardate,jdbcType=TIMESTAMP},
      </if>
      <if test="feechangedate != null">
        feeChangeDate = #{feechangedate,jdbcType=TIMESTAMP},
      </if>
      <if test="paystatus != null">
        payStatus = #{paystatus,jdbcType=CHAR},
      </if>
      <if test="datestatus != null">
        dateStatus = #{datestatus,jdbcType=CHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=CHAR},
      </if>
      <if test="reserve1 != null">
        reserve1 = #{reserve1,jdbcType=VARCHAR},
      </if>
      <if test="reserve2 != null">
        reserve2 = #{reserve2,jdbcType=VARCHAR},
      </if>
      <if test="reserver3 != null">
        reserver3 = #{reserver3,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.neu.hospital.bean.Fee">
    update fee
    set medicalRecordID = #{medicalrecordid,jdbcType=INTEGER},
      feeCategoryID = #{feecategoryid,jdbcType=INTEGER},
      chargeItemID = #{chargeitemid,jdbcType=INTEGER},
      itemType = #{itemtype,jdbcType=INTEGER},
      fee = #{fee,jdbcType=DECIMAL},
      paymentMethodID = #{paymentmethodid,jdbcType=INTEGER},
      appearUserID = #{appearuserid,jdbcType=INTEGER},
      changeUserID = #{changeuserid,jdbcType=INTEGER},
      feeAppearDate = #{feeappeardate,jdbcType=TIMESTAMP},
      feeChangeDate = #{feechangedate,jdbcType=TIMESTAMP},
      payStatus = #{paystatus,jdbcType=CHAR},
      dateStatus = #{datestatus,jdbcType=CHAR},
      `status` = #{status,jdbcType=CHAR},
      reserve1 = #{reserve1,jdbcType=VARCHAR},
      reserve2 = #{reserve2,jdbcType=VARCHAR},
      reserver3 = #{reserver3,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>