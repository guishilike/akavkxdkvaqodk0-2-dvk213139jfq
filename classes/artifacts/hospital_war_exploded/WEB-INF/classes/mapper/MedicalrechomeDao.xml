<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.neu.hospital.dao.MedicalrechomeDao">
  <resultMap id="BaseResultMap" type="edu.neu.hospital.bean.Medicalrechome">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="medicalRecId" jdbcType="INTEGER" property="medicalrecid" />
    <result column="doctorId" jdbcType="INTEGER" property="doctorid" />
    <result column="chiefComplaint" jdbcType="VARCHAR" property="chiefcomplaint" />
    <result column="currentMedicalHistory" jdbcType="VARCHAR" property="currentmedicalhistory" />
    <result column="currentTreatmentSituation" jdbcType="VARCHAR" property="currenttreatmentsituation" />
    <result column="pastMedicalHistory" jdbcType="VARCHAR" property="pastmedicalhistory" />
    <result column="allergies" jdbcType="VARCHAR" property="allergies" />
    <result column="physicalExamination" jdbcType="VARCHAR" property="physicalexamination" />
    <result column="initialDiagnosis" jdbcType="VARCHAR" property="initialdiagnosis" />
    <result column="initialDiagnosisType" jdbcType="CHAR" property="initialdiagnosistype" />
    <result column="inspectRecommend" jdbcType="VARCHAR" property="inspectrecommend" />
    <result column="attention" jdbcType="VARCHAR" property="attention" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="reserve1" jdbcType="VARCHAR" property="reserve1" />
    <result column="reserve2" jdbcType="VARCHAR" property="reserve2" />
    <result column="reserve3" jdbcType="VARCHAR" property="reserve3" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, medicalRecId, doctorId, chiefComplaint, currentMedicalHistory, currentTreatmentSituation, 
    pastMedicalHistory, allergies, physicalExamination, initialDiagnosis, initialDiagnosisType, 
    inspectRecommend, attention, `status`, reserve1, reserve2, reserve3
  </sql>
  <select id="selectByExample" parameterType="edu.neu.hospital.example.MedicalrechomeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from medicalrechome
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from medicalrechome
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from medicalrechome
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="edu.neu.hospital.example.MedicalrechomeExample">
    delete from medicalrechome
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="edu.neu.hospital.bean.Medicalrechome" useGeneratedKeys="true">
    insert into medicalrechome (medicalRecId, doctorId, chiefComplaint, 
      currentMedicalHistory, currentTreatmentSituation, 
      pastMedicalHistory, allergies, physicalExamination, 
      initialDiagnosis, initialDiagnosisType, inspectRecommend, 
      attention, `status`, reserve1, 
      reserve2, reserve3)
    values (#{medicalrecid,jdbcType=INTEGER}, #{doctorid,jdbcType=INTEGER}, #{chiefcomplaint,jdbcType=VARCHAR}, 
      #{currentmedicalhistory,jdbcType=VARCHAR}, #{currenttreatmentsituation,jdbcType=VARCHAR}, 
      #{pastmedicalhistory,jdbcType=VARCHAR}, #{allergies,jdbcType=VARCHAR}, #{physicalexamination,jdbcType=VARCHAR}, 
      #{initialdiagnosis,jdbcType=VARCHAR}, #{initialdiagnosistype,jdbcType=CHAR}, #{inspectrecommend,jdbcType=VARCHAR}, 
      #{attention,jdbcType=VARCHAR}, #{status,jdbcType=CHAR}, #{reserve1,jdbcType=VARCHAR}, 
      #{reserve2,jdbcType=VARCHAR}, #{reserve3,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="edu.neu.hospital.bean.Medicalrechome" useGeneratedKeys="true">
    insert into medicalrechome
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="medicalrecid != null">
        medicalRecId,
      </if>
      <if test="doctorid != null">
        doctorId,
      </if>
      <if test="chiefcomplaint != null">
        chiefComplaint,
      </if>
      <if test="currentmedicalhistory != null">
        currentMedicalHistory,
      </if>
      <if test="currenttreatmentsituation != null">
        currentTreatmentSituation,
      </if>
      <if test="pastmedicalhistory != null">
        pastMedicalHistory,
      </if>
      <if test="allergies != null">
        allergies,
      </if>
      <if test="physicalexamination != null">
        physicalExamination,
      </if>
      <if test="initialdiagnosis != null">
        initialDiagnosis,
      </if>
      <if test="initialdiagnosistype != null">
        initialDiagnosisType,
      </if>
      <if test="inspectrecommend != null">
        inspectRecommend,
      </if>
      <if test="attention != null">
        attention,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="reserve1 != null">
        reserve1,
      </if>
      <if test="reserve2 != null">
        reserve2,
      </if>
      <if test="reserve3 != null">
        reserve3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="medicalrecid != null">
        #{medicalrecid,jdbcType=INTEGER},
      </if>
      <if test="doctorid != null">
        #{doctorid,jdbcType=INTEGER},
      </if>
      <if test="chiefcomplaint != null">
        #{chiefcomplaint,jdbcType=VARCHAR},
      </if>
      <if test="currentmedicalhistory != null">
        #{currentmedicalhistory,jdbcType=VARCHAR},
      </if>
      <if test="currenttreatmentsituation != null">
        #{currenttreatmentsituation,jdbcType=VARCHAR},
      </if>
      <if test="pastmedicalhistory != null">
        #{pastmedicalhistory,jdbcType=VARCHAR},
      </if>
      <if test="allergies != null">
        #{allergies,jdbcType=VARCHAR},
      </if>
      <if test="physicalexamination != null">
        #{physicalexamination,jdbcType=VARCHAR},
      </if>
      <if test="initialdiagnosis != null">
        #{initialdiagnosis,jdbcType=VARCHAR},
      </if>
      <if test="initialdiagnosistype != null">
        #{initialdiagnosistype,jdbcType=CHAR},
      </if>
      <if test="inspectrecommend != null">
        #{inspectrecommend,jdbcType=VARCHAR},
      </if>
      <if test="attention != null">
        #{attention,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="reserve1 != null">
        #{reserve1,jdbcType=VARCHAR},
      </if>
      <if test="reserve2 != null">
        #{reserve2,jdbcType=VARCHAR},
      </if>
      <if test="reserve3 != null">
        #{reserve3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.neu.hospital.example.MedicalrechomeExample" resultType="java.lang.Long">
    select count(*) from medicalrechome
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update medicalrechome
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.medicalrecid != null">
        medicalRecId = #{record.medicalrecid,jdbcType=INTEGER},
      </if>
      <if test="record.doctorid != null">
        doctorId = #{record.doctorid,jdbcType=INTEGER},
      </if>
      <if test="record.chiefcomplaint != null">
        chiefComplaint = #{record.chiefcomplaint,jdbcType=VARCHAR},
      </if>
      <if test="record.currentmedicalhistory != null">
        currentMedicalHistory = #{record.currentmedicalhistory,jdbcType=VARCHAR},
      </if>
      <if test="record.currenttreatmentsituation != null">
        currentTreatmentSituation = #{record.currenttreatmentsituation,jdbcType=VARCHAR},
      </if>
      <if test="record.pastmedicalhistory != null">
        pastMedicalHistory = #{record.pastmedicalhistory,jdbcType=VARCHAR},
      </if>
      <if test="record.allergies != null">
        allergies = #{record.allergies,jdbcType=VARCHAR},
      </if>
      <if test="record.physicalexamination != null">
        physicalExamination = #{record.physicalexamination,jdbcType=VARCHAR},
      </if>
      <if test="record.initialdiagnosis != null">
        initialDiagnosis = #{record.initialdiagnosis,jdbcType=VARCHAR},
      </if>
      <if test="record.initialdiagnosistype != null">
        initialDiagnosisType = #{record.initialdiagnosistype,jdbcType=CHAR},
      </if>
      <if test="record.inspectrecommend != null">
        inspectRecommend = #{record.inspectrecommend,jdbcType=VARCHAR},
      </if>
      <if test="record.attention != null">
        attention = #{record.attention,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.reserve1 != null">
        reserve1 = #{record.reserve1,jdbcType=VARCHAR},
      </if>
      <if test="record.reserve2 != null">
        reserve2 = #{record.reserve2,jdbcType=VARCHAR},
      </if>
      <if test="record.reserve3 != null">
        reserve3 = #{record.reserve3,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update medicalrechome
    set id = #{record.id,jdbcType=INTEGER},
      medicalRecId = #{record.medicalrecid,jdbcType=INTEGER},
      doctorId = #{record.doctorid,jdbcType=INTEGER},
      chiefComplaint = #{record.chiefcomplaint,jdbcType=VARCHAR},
      currentMedicalHistory = #{record.currentmedicalhistory,jdbcType=VARCHAR},
      currentTreatmentSituation = #{record.currenttreatmentsituation,jdbcType=VARCHAR},
      pastMedicalHistory = #{record.pastmedicalhistory,jdbcType=VARCHAR},
      allergies = #{record.allergies,jdbcType=VARCHAR},
      physicalExamination = #{record.physicalexamination,jdbcType=VARCHAR},
      initialDiagnosis = #{record.initialdiagnosis,jdbcType=VARCHAR},
      initialDiagnosisType = #{record.initialdiagnosistype,jdbcType=CHAR},
      inspectRecommend = #{record.inspectrecommend,jdbcType=VARCHAR},
      attention = #{record.attention,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=CHAR},
      reserve1 = #{record.reserve1,jdbcType=VARCHAR},
      reserve2 = #{record.reserve2,jdbcType=VARCHAR},
      reserve3 = #{record.reserve3,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.neu.hospital.bean.Medicalrechome">
    update medicalrechome
    <set>
      <if test="medicalrecid != null">
        medicalRecId = #{medicalrecid,jdbcType=INTEGER},
      </if>
      <if test="doctorid != null">
        doctorId = #{doctorid,jdbcType=INTEGER},
      </if>
      <if test="chiefcomplaint != null">
        chiefComplaint = #{chiefcomplaint,jdbcType=VARCHAR},
      </if>
      <if test="currentmedicalhistory != null">
        currentMedicalHistory = #{currentmedicalhistory,jdbcType=VARCHAR},
      </if>
      <if test="currenttreatmentsituation != null">
        currentTreatmentSituation = #{currenttreatmentsituation,jdbcType=VARCHAR},
      </if>
      <if test="pastmedicalhistory != null">
        pastMedicalHistory = #{pastmedicalhistory,jdbcType=VARCHAR},
      </if>
      <if test="allergies != null">
        allergies = #{allergies,jdbcType=VARCHAR},
      </if>
      <if test="physicalexamination != null">
        physicalExamination = #{physicalexamination,jdbcType=VARCHAR},
      </if>
      <if test="initialdiagnosis != null">
        initialDiagnosis = #{initialdiagnosis,jdbcType=VARCHAR},
      </if>
      <if test="initialdiagnosistype != null">
        initialDiagnosisType = #{initialdiagnosistype,jdbcType=CHAR},
      </if>
      <if test="inspectrecommend != null">
        inspectRecommend = #{inspectrecommend,jdbcType=VARCHAR},
      </if>
      <if test="attention != null">
        attention = #{attention,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=CHAR},
      </if>
      <if test="reserve1 != null">
        reserve1 = #{reserve1,jdbcType=VARCHAR},
      </if>
      <if test="reserve2 != null">
        reserve2 = #{reserve2,jdbcType=VARCHAR},
      </if>
      <if test="reserve3 != null">
        reserve3 = #{reserve3,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.neu.hospital.bean.Medicalrechome">
    update medicalrechome
    set medicalRecId = #{medicalrecid,jdbcType=INTEGER},
      doctorId = #{doctorid,jdbcType=INTEGER},
      chiefComplaint = #{chiefcomplaint,jdbcType=VARCHAR},
      currentMedicalHistory = #{currentmedicalhistory,jdbcType=VARCHAR},
      currentTreatmentSituation = #{currenttreatmentsituation,jdbcType=VARCHAR},
      pastMedicalHistory = #{pastmedicalhistory,jdbcType=VARCHAR},
      allergies = #{allergies,jdbcType=VARCHAR},
      physicalExamination = #{physicalexamination,jdbcType=VARCHAR},
      initialDiagnosis = #{initialdiagnosis,jdbcType=VARCHAR},
      initialDiagnosisType = #{initialdiagnosistype,jdbcType=CHAR},
      inspectRecommend = #{inspectrecommend,jdbcType=VARCHAR},
      attention = #{attention,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=CHAR},
      reserve1 = #{reserve1,jdbcType=VARCHAR},
      reserve2 = #{reserve2,jdbcType=VARCHAR},
      reserve3 = #{reserve3,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>