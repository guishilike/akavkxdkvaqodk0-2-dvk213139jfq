<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.neu.hospital.dao.ScheduleDao">
  <resultMap id="BaseResultMap" type="edu.neu.hospital.bean.Schedule">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="onDutyDate" jdbcType="DATE" property="onDutyDate" />
    <result column="deptName" jdbcType="VARCHAR" property="deptName" />
    <result column="onDutyDoctorID" jdbcType="INTEGER" property="onDutyDoctorID" />
    <result column="levelName" jdbcType="INTEGER" property="levelName" />
    <result column="onDutyTime" jdbcType="INTEGER" property="onDutyTime" />
    <result column="limitNumber" jdbcType="INTEGER" property="limitNumber" />
    <result column="remainingAmount" jdbcType="INTEGER" property="remainingAmount" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="reserve1" jdbcType="VARCHAR" property="reserve1" />
    <result column="reserve2" jdbcType="VARCHAR" property="reserve2" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, onDutyDate, deptName, onDutyDoctorID, levelName, onDutyTime, limitNumber, remainingAmount, 
    `status`, reserve1, reserve2
  </sql>
  <select id="selectByExample" parameterType="edu.neu.hospital.example.ScheduleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from schedule
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from schedule
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="edu.neu.hospital.example.ScheduleExample">
    delete from schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="edu.neu.hospital.bean.Schedule" useGeneratedKeys="true">
    insert into schedule (onDutyDate, deptName, onDutyDoctorID, 
      levelName, onDutyTime, limitNumber, 
      remainingAmount, `status`, reserve1, 
      reserve2)
    values (#{onDutyDate,jdbcType=DATE}, #{deptName,jdbcType=VARCHAR}, #{onDutyDoctorID,jdbcType=INTEGER}, 
      #{levelName,jdbcType=INTEGER}, #{onDutyTime,jdbcType=INTEGER}, #{limitNumber,jdbcType=INTEGER}, 
      #{remainingAmount,jdbcType=INTEGER}, #{status,jdbcType=CHAR}, #{reserve1,jdbcType=VARCHAR}, 
      #{reserve2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="edu.neu.hospital.bean.Schedule" useGeneratedKeys="true">
    insert into schedule
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="onDutyDate != null">
        onDutyDate,
      </if>
      <if test="deptName != null">
        deptName,
      </if>
      <if test="onDutyDoctorID != null">
        onDutyDoctorID,
      </if>
      <if test="levelName != null">
        levelName,
      </if>
      <if test="onDutyTime != null">
        onDutyTime,
      </if>
      <if test="limitNumber != null">
        limitNumber,
      </if>
      <if test="remainingAmount != null">
        remainingAmount,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="reserve1 != null">
        reserve1,
      </if>
      <if test="reserve2 != null">
        reserve2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="onDutyDate != null">
        #{onDutyDate,jdbcType=DATE},
      </if>
      <if test="deptName != null">
        #{deptName,jdbcType=VARCHAR},
      </if>
      <if test="onDutyDoctorID != null">
        #{onDutyDoctorID,jdbcType=INTEGER},
      </if>
      <if test="levelName != null">
        #{levelName,jdbcType=INTEGER},
      </if>
      <if test="onDutyTime != null">
        #{onDutyTime,jdbcType=INTEGER},
      </if>
      <if test="limitNumber != null">
        #{limitNumber,jdbcType=INTEGER},
      </if>
      <if test="remainingAmount != null">
        #{remainingAmount,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="reserve1 != null">
        #{reserve1,jdbcType=VARCHAR},
      </if>
      <if test="reserve2 != null">
        #{reserve2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.neu.hospital.example.ScheduleExample" resultType="java.lang.Long">
    select count(*) from schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update schedule
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.onDutyDate != null">
        onDutyDate = #{record.onDutyDate,jdbcType=DATE},
      </if>
      <if test="record.deptName != null">
        deptName = #{record.deptName,jdbcType=VARCHAR},
      </if>
      <if test="record.onDutyDoctorID != null">
        onDutyDoctorID = #{record.onDutyDoctorID,jdbcType=INTEGER},
      </if>
      <if test="record.levelName != null">
        levelName = #{record.levelName,jdbcType=INTEGER},
      </if>
      <if test="record.onDutyTime != null">
        onDutyTime = #{record.onDutyTime,jdbcType=INTEGER},
      </if>
      <if test="record.limitNumber != null">
        limitNumber = #{record.limitNumber,jdbcType=INTEGER},
      </if>
      <if test="record.remainingAmount != null">
        remainingAmount = #{record.remainingAmount,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.reserve1 != null">
        reserve1 = #{record.reserve1,jdbcType=VARCHAR},
      </if>
      <if test="record.reserve2 != null">
        reserve2 = #{record.reserve2,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update schedule
    set id = #{record.id,jdbcType=INTEGER},
      onDutyDate = #{record.onDutyDate,jdbcType=DATE},
      deptName = #{record.deptName,jdbcType=VARCHAR},
      onDutyDoctorID = #{record.onDutyDoctorID,jdbcType=INTEGER},
      levelName = #{record.levelName,jdbcType=INTEGER},
      onDutyTime = #{record.onDutyTime,jdbcType=INTEGER},
      limitNumber = #{record.limitNumber,jdbcType=INTEGER},
      remainingAmount = #{record.remainingAmount,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=CHAR},
      reserve1 = #{record.reserve1,jdbcType=VARCHAR},
      reserve2 = #{record.reserve2,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.neu.hospital.bean.Schedule">
    update schedule
    <set>
      <if test="onDutyDate != null">
        onDutyDate = #{onDutyDate,jdbcType=DATE},
      </if>
      <if test="deptName != null">
        deptName = #{deptName,jdbcType=VARCHAR},
      </if>
      <if test="onDutyDoctorID != null">
        onDutyDoctorID = #{onDutyDoctorID,jdbcType=INTEGER},
      </if>
      <if test="levelName != null">
        levelName = #{levelName,jdbcType=INTEGER},
      </if>
      <if test="onDutyTime != null">
        onDutyTime = #{onDutyTime,jdbcType=INTEGER},
      </if>
      <if test="limitNumber != null">
        limitNumber = #{limitNumber,jdbcType=INTEGER},
      </if>
      <if test="remainingAmount != null">
        remainingAmount = #{remainingAmount,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=CHAR},
      </if>
      <if test="reserve1 != null">
        reserve1 = #{reserve1,jdbcType=VARCHAR},
      </if>
      <if test="reserve2 != null">
        reserve2 = #{reserve2,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.neu.hospital.bean.Schedule">
    update schedule
    set onDutyDate = #{onDutyDate,jdbcType=DATE},
      deptName = #{deptName,jdbcType=VARCHAR},
      onDutyDoctorID = #{onDutyDoctorID,jdbcType=INTEGER},
      levelName = #{levelName,jdbcType=INTEGER},
      onDutyTime = #{onDutyTime,jdbcType=INTEGER},
      limitNumber = #{limitNumber,jdbcType=INTEGER},
      remainingAmount = #{remainingAmount,jdbcType=INTEGER},
      `status` = #{status,jdbcType=CHAR},
      reserve1 = #{reserve1,jdbcType=VARCHAR},
      reserve2 = #{reserve2,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>