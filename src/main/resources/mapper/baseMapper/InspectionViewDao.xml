<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace = "edu.neu.hospital.dao.baseDao.InspectionViewDao">
    <resultMap id = "BaseResultMap" type = "edu.neu.hospital.bean.basicTableBean.InspectionView">
        <result column = "inspectionID" jdbcType = "INTEGER" property = "inspectionID"/>
        <result column = "medicalRecordID" jdbcType = "INTEGER" property = "medicalRecordID"/>
        <result column = "doctorID" jdbcType = "INTEGER" property = "doctorID"/>
        <result column = "inspectionDetailsID" jdbcType = "INTEGER" property = "inspectionDetailsID"/>
        <result column = "FmedItemID" jdbcType = "INTEGER" property = "fmedItemID"/>
        <result column = "number" jdbcType = "INTEGER" property = "number"/>
    </resultMap>
    <sql id = "Example_Where_Clause">
        <where>
            <foreach collection = "oredCriteria" item = "criteria" separator = "or">
                <if test = "criteria.valid">
                    <trim prefix = "(" prefixOverrides = "and" suffix = ")">
                        <foreach collection = "criteria.criteria" item = "criterion">
                            <choose>
                                <when test = "criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test = "criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test = "criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test = "criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close = ")" collection = "criterion.value" item = "listItem" open = "("
                                             separator = ",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id = "Update_By_Example_Where_Clause">
        <where>
            <foreach collection = "example.oredCriteria" item = "criteria" separator = "or">
                <if test = "criteria.valid">
                    <trim prefix = "(" prefixOverrides = "and" suffix = ")">
                        <foreach collection = "criteria.criteria" item = "criterion">
                            <choose>
                                <when test = "criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test = "criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test = "criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test = "criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close = ")" collection = "criterion.value" item = "listItem" open = "("
                                             separator = ",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id = "Base_Column_List">
        inspectionID, medicalRecordID, doctorID, inspectionDetailsID, FmedItemID, `number`
    </sql>
    <select id = "selectByExample" parameterType = "edu.neu.hospital.example.baseExample.InspectionViewExample"
            resultMap = "BaseResultMap">
        select
        <if test = "distinct">
            distinct
        </if>
        <include refid = "Base_Column_List"/>
        from inspectionview
        <if test = "_parameter != null">
            <include refid = "Example_Where_Clause"/>
        </if>
        <if test = "orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test = "limit != null">
            <if test = "offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test = "offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <delete id = "deleteByExample" parameterType = "edu.neu.hospital.example.baseExample.InspectionViewExample">
        delete from inspectionview
        <if test = "_parameter != null">
            <include refid = "Example_Where_Clause"/>
        </if>
    </delete>
    <insert id = "insert" parameterType = "edu.neu.hospital.bean.basicTableBean.InspectionView">
        insert into inspectionview (inspectionID, medicalRecordID, doctorID,
                                    inspectionDetailsID, FmedItemID, `number`)
        values (#{inspectionID,jdbcType=INTEGER}, #{medicalRecordID,jdbcType=INTEGER}, #{doctorID,jdbcType=INTEGER},
                #{inspectionDetailsID,jdbcType=INTEGER}, #{fmedItemID,jdbcType=INTEGER}, #{number,jdbcType=INTEGER})
    </insert>
    <insert id = "insertSelective" parameterType = "edu.neu.hospital.bean.basicTableBean.InspectionView">
        insert into inspectionview
        <trim prefix = "(" suffix = ")" suffixOverrides = ",">
            <if test = "inspectionID != null">
                inspectionID,
            </if>
            <if test = "medicalRecordID != null">
                medicalRecordID,
            </if>
            <if test = "doctorID != null">
                doctorID,
            </if>
            <if test = "inspectionDetailsID != null">
                inspectionDetailsID,
            </if>
            <if test = "fmedItemID != null">
                FmedItemID,
            </if>
            <if test = "number != null">
                `number`,
            </if>
        </trim>
        <trim prefix = "values (" suffix = ")" suffixOverrides = ",">
            <if test = "inspectionID != null">
                #{inspectionID,jdbcType=INTEGER},
            </if>
            <if test = "medicalRecordID != null">
                #{medicalRecordID,jdbcType=INTEGER},
            </if>
            <if test = "doctorID != null">
                #{doctorID,jdbcType=INTEGER},
            </if>
            <if test = "inspectionDetailsID != null">
                #{inspectionDetailsID,jdbcType=INTEGER},
            </if>
            <if test = "fmedItemID != null">
                #{fmedItemID,jdbcType=INTEGER},
            </if>
            <if test = "number != null">
                #{number,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id = "countByExample" parameterType = "edu.neu.hospital.example.baseExample.InspectionViewExample"
            resultType = "java.lang.Long">
        select count(*) from inspectionview
        <if test = "_parameter != null">
            <include refid = "Example_Where_Clause"/>
        </if>
    </select>
    <update id = "updateByExampleSelective" parameterType = "map">
        update inspectionview
        <set>
            <if test = "record.inspectionID != null">
                inspectionID = #{record.inspectionID,jdbcType=INTEGER},
            </if>
            <if test = "record.medicalRecordID != null">
                medicalRecordID = #{record.medicalRecordID,jdbcType=INTEGER},
            </if>
            <if test = "record.doctorID != null">
                doctorID = #{record.doctorID,jdbcType=INTEGER},
            </if>
            <if test = "record.inspectionDetailsID != null">
                inspectionDetailsID = #{record.inspectionDetailsID,jdbcType=INTEGER},
            </if>
            <if test = "record.fmedItemID != null">
                FmedItemID = #{record.fmedItemID,jdbcType=INTEGER},
            </if>
            <if test = "record.number != null">
                `number` = #{record.number,jdbcType=INTEGER},
            </if>
        </set>
        <if test = "_parameter != null">
            <include refid = "Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id = "updateByExample" parameterType = "map">
        update inspectionview
        set inspectionID = #{record.inspectionID,jdbcType=INTEGER},
        medicalRecordID = #{record.medicalRecordID,jdbcType=INTEGER},
        doctorID = #{record.doctorID,jdbcType=INTEGER},
        inspectionDetailsID = #{record.inspectionDetailsID,jdbcType=INTEGER},
        FmedItemID = #{record.fmedItemID,jdbcType=INTEGER},
        `number` = #{record.number,jdbcType=INTEGER}
        <if test = "_parameter != null">
            <include refid = "Update_By_Example_Where_Clause"/>
        </if>
    </update>
</mapper>