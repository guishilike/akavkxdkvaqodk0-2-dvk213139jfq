<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.neu.hospital.dao.baseDao.RegistrationLevelViewDao">
  <resultMap id="BaseResultMap" type="edu.neu.hospital.bean.baseBean.RegistrationLevelView">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="registeredCode" jdbcType="VARCHAR" property="registeredCode" />
    <result column="registeredName" jdbcType="VARCHAR" property="registeredName" />
    <result column="sequenceID" jdbcType="INTEGER" property="sequenceID" />
    <result column="isDefault" jdbcType="CHAR" property="isDefault" />
    <result column="registrationFee" jdbcType="DECIMAL" property="registrationFee" />
    <result column="appearDate" jdbcType="TIMESTAMP" property="appearDate" />
    <result column="apearUserID" jdbcType="INTEGER" property="apearUserID" />
    <result column="changeDate" jdbcType="TIMESTAMP" property="changeDate" />
    <result column="changeUserID" jdbcType="INTEGER" property="changeUserID" />
    <result column="appearUserName" jdbcType="VARCHAR" property="appearUserName" />
    <result column="changeUserName" jdbcType="VARCHAR" property="changeUserName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, registeredCode, registeredName, sequenceID, isDefault, registrationFee, appearDate, 
    apearUserID, changeDate, changeUserID, appearUserName, changeUserName
  </sql>
  <select id="selectByExample" parameterType="edu.neu.hospital.example.baseExample.RegistrationLevelViewExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from registrationlevelview
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <delete id="deleteByExample" parameterType="edu.neu.hospital.example.baseExample.RegistrationLevelViewExample">
    delete from registrationlevelview
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.neu.hospital.bean.baseBean.RegistrationLevelView">
    insert into registrationlevelview (id, registeredCode, registeredName, 
      sequenceID, isDefault, registrationFee, 
      appearDate, apearUserID, changeDate, 
      changeUserID, appearUserName, changeUserName
      )
    values (#{id,jdbcType=INTEGER}, #{registeredCode,jdbcType=VARCHAR}, #{registeredName,jdbcType=VARCHAR}, 
      #{sequenceID,jdbcType=INTEGER}, #{isDefault,jdbcType=CHAR}, #{registrationFee,jdbcType=DECIMAL}, 
      #{appearDate,jdbcType=TIMESTAMP}, #{apearUserID,jdbcType=INTEGER}, #{changeDate,jdbcType=TIMESTAMP}, 
      #{changeUserID,jdbcType=INTEGER}, #{appearUserName,jdbcType=VARCHAR}, #{changeUserName,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="edu.neu.hospital.bean.baseBean.RegistrationLevelView">
    insert into registrationlevelview
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="registeredCode != null">
        registeredCode,
      </if>
      <if test="registeredName != null">
        registeredName,
      </if>
      <if test="sequenceID != null">
        sequenceID,
      </if>
      <if test="isDefault != null">
        isDefault,
      </if>
      <if test="registrationFee != null">
        registrationFee,
      </if>
      <if test="appearDate != null">
        appearDate,
      </if>
      <if test="apearUserID != null">
        apearUserID,
      </if>
      <if test="changeDate != null">
        changeDate,
      </if>
      <if test="changeUserID != null">
        changeUserID,
      </if>
      <if test="appearUserName != null">
        appearUserName,
      </if>
      <if test="changeUserName != null">
        changeUserName,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="registeredCode != null">
        #{registeredCode,jdbcType=VARCHAR},
      </if>
      <if test="registeredName != null">
        #{registeredName,jdbcType=VARCHAR},
      </if>
      <if test="sequenceID != null">
        #{sequenceID,jdbcType=INTEGER},
      </if>
      <if test="isDefault != null">
        #{isDefault,jdbcType=CHAR},
      </if>
      <if test="registrationFee != null">
        #{registrationFee,jdbcType=DECIMAL},
      </if>
      <if test="appearDate != null">
        #{appearDate,jdbcType=TIMESTAMP},
      </if>
      <if test="apearUserID != null">
        #{apearUserID,jdbcType=INTEGER},
      </if>
      <if test="changeDate != null">
        #{changeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="changeUserID != null">
        #{changeUserID,jdbcType=INTEGER},
      </if>
      <if test="appearUserName != null">
        #{appearUserName,jdbcType=VARCHAR},
      </if>
      <if test="changeUserName != null">
        #{changeUserName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.neu.hospital.example.baseExample.RegistrationLevelViewExample" resultType="java.lang.Long">
    select count(*) from registrationlevelview
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update registrationlevelview
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.registeredCode != null">
        registeredCode = #{record.registeredCode,jdbcType=VARCHAR},
      </if>
      <if test="record.registeredName != null">
        registeredName = #{record.registeredName,jdbcType=VARCHAR},
      </if>
      <if test="record.sequenceID != null">
        sequenceID = #{record.sequenceID,jdbcType=INTEGER},
      </if>
      <if test="record.isDefault != null">
        isDefault = #{record.isDefault,jdbcType=CHAR},
      </if>
      <if test="record.registrationFee != null">
        registrationFee = #{record.registrationFee,jdbcType=DECIMAL},
      </if>
      <if test="record.appearDate != null">
        appearDate = #{record.appearDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.apearUserID != null">
        apearUserID = #{record.apearUserID,jdbcType=INTEGER},
      </if>
      <if test="record.changeDate != null">
        changeDate = #{record.changeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.changeUserID != null">
        changeUserID = #{record.changeUserID,jdbcType=INTEGER},
      </if>
      <if test="record.appearUserName != null">
        appearUserName = #{record.appearUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.changeUserName != null">
        changeUserName = #{record.changeUserName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update registrationlevelview
    set id = #{record.id,jdbcType=INTEGER},
      registeredCode = #{record.registeredCode,jdbcType=VARCHAR},
      registeredName = #{record.registeredName,jdbcType=VARCHAR},
      sequenceID = #{record.sequenceID,jdbcType=INTEGER},
      isDefault = #{record.isDefault,jdbcType=CHAR},
      registrationFee = #{record.registrationFee,jdbcType=DECIMAL},
      appearDate = #{record.appearDate,jdbcType=TIMESTAMP},
      apearUserID = #{record.apearUserID,jdbcType=INTEGER},
      changeDate = #{record.changeDate,jdbcType=TIMESTAMP},
      changeUserID = #{record.changeUserID,jdbcType=INTEGER},
      appearUserName = #{record.appearUserName,jdbcType=VARCHAR},
      changeUserName = #{record.changeUserName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>