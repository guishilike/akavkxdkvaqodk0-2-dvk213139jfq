<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.neu.hospital.dao.basicTableDao.PrescriptionFeeDao">
  <resultMap id="BaseResultMap" type="edu.neu.hospital.bean.basicTableBean.PrescriptionFee">
    <result column="medicalRecordID" jdbcType="INTEGER" property="medicalRecordID" />
    <result column="doctorID" jdbcType="INTEGER" property="doctorID" />
    <result column="prescriptionDetailID" jdbcType="INTEGER" property="prescriptionDetailID" />
    <result column="prescriptionID" jdbcType="INTEGER" property="prescriptionID" />
    <result column="drugID" jdbcType="INTEGER" property="drugID" />
    <result column="dosage" jdbcType="DECIMAL" property="dosage" />
    <result column="drugsTypeID" jdbcType="INTEGER" property="drugsTypeID" />
    <result column="drugsPrice" jdbcType="DECIMAL" property="drugsPrice" />
    <result column="paymentCategoryID" jdbcType="INTEGER" property="paymentCategoryID" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    medicalRecordID, doctorID, prescriptionDetailID, prescriptionID, drugID, dosage, 
    drugsTypeID, drugsPrice, paymentCategoryID
  </sql>
  <select id="selectByExample" parameterType="edu.neu.hospital.example.basicTableExample.PrescriptionFeeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from prescriptionfee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <delete id="deleteByExample" parameterType="edu.neu.hospital.example.basicTableExample.PrescriptionFeeExample">
    delete from prescriptionfee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.neu.hospital.bean.basicTableBean.PrescriptionFee">
    insert into prescriptionfee (medicalRecordID, doctorID, prescriptionDetailID, 
      prescriptionID, drugID, dosage, 
      drugsTypeID, drugsPrice, paymentCategoryID
      )
    values (#{medicalRecordID,jdbcType=INTEGER}, #{doctorID,jdbcType=INTEGER}, #{prescriptionDetailID,jdbcType=INTEGER}, 
      #{prescriptionID,jdbcType=INTEGER}, #{drugID,jdbcType=INTEGER}, #{dosage,jdbcType=DECIMAL}, 
      #{drugsTypeID,jdbcType=INTEGER}, #{drugsPrice,jdbcType=DECIMAL}, #{paymentCategoryID,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="edu.neu.hospital.bean.basicTableBean.PrescriptionFee">
    insert into prescriptionfee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="medicalRecordID != null">
        medicalRecordID,
      </if>
      <if test="doctorID != null">
        doctorID,
      </if>
      <if test="prescriptionDetailID != null">
        prescriptionDetailID,
      </if>
      <if test="prescriptionID != null">
        prescriptionID,
      </if>
      <if test="drugID != null">
        drugID,
      </if>
      <if test="dosage != null">
        dosage,
      </if>
      <if test="drugsTypeID != null">
        drugsTypeID,
      </if>
      <if test="drugsPrice != null">
        drugsPrice,
      </if>
      <if test="paymentCategoryID != null">
        paymentCategoryID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="medicalRecordID != null">
        #{medicalRecordID,jdbcType=INTEGER},
      </if>
      <if test="doctorID != null">
        #{doctorID,jdbcType=INTEGER},
      </if>
      <if test="prescriptionDetailID != null">
        #{prescriptionDetailID,jdbcType=INTEGER},
      </if>
      <if test="prescriptionID != null">
        #{prescriptionID,jdbcType=INTEGER},
      </if>
      <if test="drugID != null">
        #{drugID,jdbcType=INTEGER},
      </if>
      <if test="dosage != null">
        #{dosage,jdbcType=DECIMAL},
      </if>
      <if test="drugsTypeID != null">
        #{drugsTypeID,jdbcType=INTEGER},
      </if>
      <if test="drugsPrice != null">
        #{drugsPrice,jdbcType=DECIMAL},
      </if>
      <if test="paymentCategoryID != null">
        #{paymentCategoryID,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.neu.hospital.example.basicTableExample.PrescriptionFeeExample" resultType="java.lang.Long">
    select count(*) from prescriptionfee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update prescriptionfee
    <set>
      <if test="record.medicalRecordID != null">
        medicalRecordID = #{record.medicalRecordID,jdbcType=INTEGER},
      </if>
      <if test="record.doctorID != null">
        doctorID = #{record.doctorID,jdbcType=INTEGER},
      </if>
      <if test="record.prescriptionDetailID != null">
        prescriptionDetailID = #{record.prescriptionDetailID,jdbcType=INTEGER},
      </if>
      <if test="record.prescriptionID != null">
        prescriptionID = #{record.prescriptionID,jdbcType=INTEGER},
      </if>
      <if test="record.drugID != null">
        drugID = #{record.drugID,jdbcType=INTEGER},
      </if>
      <if test="record.dosage != null">
        dosage = #{record.dosage,jdbcType=DECIMAL},
      </if>
      <if test="record.drugsTypeID != null">
        drugsTypeID = #{record.drugsTypeID,jdbcType=INTEGER},
      </if>
      <if test="record.drugsPrice != null">
        drugsPrice = #{record.drugsPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.paymentCategoryID != null">
        paymentCategoryID = #{record.paymentCategoryID,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update prescriptionfee
    set medicalRecordID = #{record.medicalRecordID,jdbcType=INTEGER},
      doctorID = #{record.doctorID,jdbcType=INTEGER},
      prescriptionDetailID = #{record.prescriptionDetailID,jdbcType=INTEGER},
      prescriptionID = #{record.prescriptionID,jdbcType=INTEGER},
      drugID = #{record.drugID,jdbcType=INTEGER},
      dosage = #{record.dosage,jdbcType=DECIMAL},
      drugsTypeID = #{record.drugsTypeID,jdbcType=INTEGER},
      drugsPrice = #{record.drugsPrice,jdbcType=DECIMAL},
      paymentCategoryID = #{record.paymentCategoryID,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>