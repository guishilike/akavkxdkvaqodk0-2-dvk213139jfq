<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace = "edu.neu.hospital.dao.basicTableDao.InspectionResultDao">
    <resultMap id = "BaseResultMap" type = "edu.neu.hospital.bean.basicTableBean.InspectionResult">
        <id column = "id" jdbcType = "INTEGER" property = "id"/>
        <result column = "inspectionDetailsID" jdbcType = "INTEGER" property = "inspectionDetailsID"/>
        <result column = "doctorID" jdbcType = "INTEGER" property = "doctorID"/>
        <result column = "appearUserID" jdbcType = "INTEGER" property = "appearUserID"/>
        <result column = "changeUserID" jdbcType = "INTEGER" property = "changeUserID"/>
        <result column = "appearDate" jdbcType = "TIMESTAMP" property = "appearDate"/>
        <result column = "changeDate" jdbcType = "TIMESTAMP" property = "changeDate"/>
        <result column = "status" jdbcType = "CHAR" property = "status"/>
        <result column = "reserve1" jdbcType = "VARCHAR" property = "reserve1"/>
        <result column = "reserve2" jdbcType = "VARCHAR" property = "reserve2"/>
    </resultMap>
    <resultMap extends = "BaseResultMap" id = "ResultMapWithBLOBs"
               type = "edu.neu.hospital.bean.basicTableBean.InspectionResultWithBLOBs">
        <result column = "view" jdbcType = "LONGVARCHAR" property = "view"/>
        <result column = "diagnosis" jdbcType = "LONGVARCHAR" property = "diagnosis"/>
    </resultMap>
    <sql id = "Example_Where_Clause">
        <where>
            <foreach collection = "oredCriteria" item = "criteria" separator = "or">
                <if test = "criteria.valid">
                    <trim prefix = "(" prefixOverrides = "and" suffix = ")">
                        <foreach collection = "criteria.criteria" item = "criterion">
                            <choose>
                                <when test = "criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test = "criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test = "criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test = "criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close = ")" collection = "criterion.value" item = "listItem" open = "("
                                             separator = ",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id = "Update_By_Example_Where_Clause">
        <where>
            <foreach collection = "example.oredCriteria" item = "criteria" separator = "or">
                <if test = "criteria.valid">
                    <trim prefix = "(" prefixOverrides = "and" suffix = ")">
                        <foreach collection = "criteria.criteria" item = "criterion">
                            <choose>
                                <when test = "criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test = "criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test = "criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test = "criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close = ")" collection = "criterion.value" item = "listItem" open = "("
                                             separator = ",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id = "Base_Column_List">
        id, inspectionDetailsID, doctorID, appearUserID, changeUserID, appearDate, changeDate,
        `status`, reserve1, reserve2
    </sql>
    <sql id = "Blob_Column_List">
        `view`, diagnosis
    </sql>
    <select id = "selectByExampleWithBLOBs" parameterType = "edu.neu.hospital.example.basicTableExample.InspectionResultExample"
            resultMap = "ResultMapWithBLOBs">
        select
        <if test = "distinct">
            distinct
        </if>
        <include refid = "Base_Column_List"/>
        ,
        <include refid = "Blob_Column_List"/>
        from inspectionresult
        <if test = "_parameter != null">
            <include refid = "Example_Where_Clause"/>
        </if>
        <if test = "orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test = "limit != null">
            <if test = "offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test = "offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id = "selectByExample" parameterType = "edu.neu.hospital.example.basicTableExample.InspectionResultExample"
            resultMap = "BaseResultMap">
        select
        <if test = "distinct">
            distinct
        </if>
        <include refid = "Base_Column_List"/>
        from inspectionresult
        <if test = "_parameter != null">
            <include refid = "Example_Where_Clause"/>
        </if>
        <if test = "orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test = "limit != null">
            <if test = "offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test = "offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id = "selectByPrimaryKey" parameterType = "java.lang.Integer" resultMap = "ResultMapWithBLOBs">
        select
        <include refid = "Base_Column_List"/>
        ,
        <include refid = "Blob_Column_List"/>
        from inspectionresult
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id = "deleteByPrimaryKey" parameterType = "java.lang.Integer">
        delete
        from inspectionresult
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id = "deleteByExample" parameterType = "edu.neu.hospital.example.basicTableExample.InspectionResultExample">
        delete from inspectionresult
        <if test = "_parameter != null">
            <include refid = "Example_Where_Clause"/>
        </if>
    </delete>
    <insert id = "insert" keyColumn = "id" keyProperty = "id"
            parameterType = "edu.neu.hospital.bean.basicTableBean.InspectionResultWithBLOBs" useGeneratedKeys = "true">
        insert into inspectionresult (inspectionDetailsID, doctorID, appearUserID,
                                      changeUserID, appearDate, changeDate,
                                      `status`, reserve1, reserve2,
                                      `view`, diagnosis)
        values (#{inspectionDetailsID,jdbcType=INTEGER}, #{doctorID,jdbcType=INTEGER}, #{appearUserID,jdbcType=INTEGER},
                #{changeUserID,jdbcType=INTEGER}, #{appearDate,jdbcType=TIMESTAMP}, #{changeDate,jdbcType=TIMESTAMP},
                #{status,jdbcType=CHAR}, #{reserve1,jdbcType=VARCHAR}, #{reserve2,jdbcType=VARCHAR},
                #{view,jdbcType=LONGVARCHAR}, #{diagnosis,jdbcType=LONGVARCHAR})
    </insert>
    <insert id = "insertSelective" keyColumn = "id" keyProperty = "id"
            parameterType = "edu.neu.hospital.bean.basicTableBean.InspectionResultWithBLOBs" useGeneratedKeys = "true">
        insert into inspectionresult
        <trim prefix = "(" suffix = ")" suffixOverrides = ",">
            <if test = "inspectionDetailsID != null">
                inspectionDetailsID,
            </if>
            <if test = "doctorID != null">
                doctorID,
            </if>
            <if test = "appearUserID != null">
                appearUserID,
            </if>
            <if test = "changeUserID != null">
                changeUserID,
            </if>
            <if test = "appearDate != null">
                appearDate,
            </if>
            <if test = "changeDate != null">
                changeDate,
            </if>
            <if test = "status != null">
                `status`,
            </if>
            <if test = "reserve1 != null">
                reserve1,
            </if>
            <if test = "reserve2 != null">
                reserve2,
            </if>
            <if test = "view != null">
                `view`,
            </if>
            <if test = "diagnosis != null">
                diagnosis,
            </if>
        </trim>
        <trim prefix = "values (" suffix = ")" suffixOverrides = ",">
            <if test = "inspectionDetailsID != null">
                #{inspectionDetailsID,jdbcType=INTEGER},
            </if>
            <if test = "doctorID != null">
                #{doctorID,jdbcType=INTEGER},
            </if>
            <if test = "appearUserID != null">
                #{appearUserID,jdbcType=INTEGER},
            </if>
            <if test = "changeUserID != null">
                #{changeUserID,jdbcType=INTEGER},
            </if>
            <if test = "appearDate != null">
                #{appearDate,jdbcType=TIMESTAMP},
            </if>
            <if test = "changeDate != null">
                #{changeDate,jdbcType=TIMESTAMP},
            </if>
            <if test = "status != null">
                #{status,jdbcType=CHAR},
            </if>
            <if test = "reserve1 != null">
                #{reserve1,jdbcType=VARCHAR},
            </if>
            <if test = "reserve2 != null">
                #{reserve2,jdbcType=VARCHAR},
            </if>
            <if test = "view != null">
                #{view,jdbcType=LONGVARCHAR},
            </if>
            <if test = "diagnosis != null">
                #{diagnosis,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id = "countByExample" parameterType = "edu.neu.hospital.example.basicTableExample.InspectionResultExample"
            resultType = "java.lang.Long">
        select count(*) from inspectionresult
        <if test = "_parameter != null">
            <include refid = "Example_Where_Clause"/>
        </if>
    </select>
    <update id = "updateByExampleSelective" parameterType = "map">
        update inspectionresult
        <set>
            <if test = "record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test = "record.inspectionDetailsID != null">
                inspectionDetailsID = #{record.inspectionDetailsID,jdbcType=INTEGER},
            </if>
            <if test = "record.doctorID != null">
                doctorID = #{record.doctorID,jdbcType=INTEGER},
            </if>
            <if test = "record.appearUserID != null">
                appearUserID = #{record.appearUserID,jdbcType=INTEGER},
            </if>
            <if test = "record.changeUserID != null">
                changeUserID = #{record.changeUserID,jdbcType=INTEGER},
            </if>
            <if test = "record.appearDate != null">
                appearDate = #{record.appearDate,jdbcType=TIMESTAMP},
            </if>
            <if test = "record.changeDate != null">
                changeDate = #{record.changeDate,jdbcType=TIMESTAMP},
            </if>
            <if test = "record.status != null">
                `status` = #{record.status,jdbcType=CHAR},
            </if>
            <if test = "record.reserve1 != null">
                reserve1 = #{record.reserve1,jdbcType=VARCHAR},
            </if>
            <if test = "record.reserve2 != null">
                reserve2 = #{record.reserve2,jdbcType=VARCHAR},
            </if>
            <if test = "record.view != null">
                `view` = #{record.view,jdbcType=LONGVARCHAR},
            </if>
            <if test = "record.diagnosis != null">
                diagnosis = #{record.diagnosis,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test = "_parameter != null">
            <include refid = "Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id = "updateByExampleWithBLOBs" parameterType = "map">
        update inspectionresult
        set id = #{record.id,jdbcType=INTEGER},
        inspectionDetailsID = #{record.inspectionDetailsID,jdbcType=INTEGER},
        doctorID = #{record.doctorID,jdbcType=INTEGER},
        appearUserID = #{record.appearUserID,jdbcType=INTEGER},
        changeUserID = #{record.changeUserID,jdbcType=INTEGER},
        appearDate = #{record.appearDate,jdbcType=TIMESTAMP},
        changeDate = #{record.changeDate,jdbcType=TIMESTAMP},
        `status` = #{record.status,jdbcType=CHAR},
        reserve1 = #{record.reserve1,jdbcType=VARCHAR},
        reserve2 = #{record.reserve2,jdbcType=VARCHAR},
        `view` = #{record.view,jdbcType=LONGVARCHAR},
        diagnosis = #{record.diagnosis,jdbcType=LONGVARCHAR}
        <if test = "_parameter != null">
            <include refid = "Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id = "updateByExample" parameterType = "map">
        update inspectionresult
        set id = #{record.id,jdbcType=INTEGER},
        inspectionDetailsID = #{record.inspectionDetailsID,jdbcType=INTEGER},
        doctorID = #{record.doctorID,jdbcType=INTEGER},
        appearUserID = #{record.appearUserID,jdbcType=INTEGER},
        changeUserID = #{record.changeUserID,jdbcType=INTEGER},
        appearDate = #{record.appearDate,jdbcType=TIMESTAMP},
        changeDate = #{record.changeDate,jdbcType=TIMESTAMP},
        `status` = #{record.status,jdbcType=CHAR},
        reserve1 = #{record.reserve1,jdbcType=VARCHAR},
        reserve2 = #{record.reserve2,jdbcType=VARCHAR}
        <if test = "_parameter != null">
            <include refid = "Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id = "updateByPrimaryKeySelective" parameterType = "edu.neu.hospital.bean.basicTableBean.InspectionResultWithBLOBs">
        update inspectionresult
        <set>
            <if test = "inspectionDetailsID != null">
                inspectionDetailsID = #{inspectionDetailsID,jdbcType=INTEGER},
            </if>
            <if test = "doctorID != null">
                doctorID = #{doctorID,jdbcType=INTEGER},
            </if>
            <if test = "appearUserID != null">
                appearUserID = #{appearUserID,jdbcType=INTEGER},
            </if>
            <if test = "changeUserID != null">
                changeUserID = #{changeUserID,jdbcType=INTEGER},
            </if>
            <if test = "appearDate != null">
                appearDate = #{appearDate,jdbcType=TIMESTAMP},
            </if>
            <if test = "changeDate != null">
                changeDate = #{changeDate,jdbcType=TIMESTAMP},
            </if>
            <if test = "status != null">
                `status` = #{status,jdbcType=CHAR},
            </if>
            <if test = "reserve1 != null">
                reserve1 = #{reserve1,jdbcType=VARCHAR},
            </if>
            <if test = "reserve2 != null">
                reserve2 = #{reserve2,jdbcType=VARCHAR},
            </if>
            <if test = "view != null">
                `view` = #{view,jdbcType=LONGVARCHAR},
            </if>
            <if test = "diagnosis != null">
                diagnosis = #{diagnosis,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id = "updateByPrimaryKeyWithBLOBs" parameterType = "edu.neu.hospital.bean.basicTableBean.InspectionResultWithBLOBs">
        update inspectionresult
        set inspectionDetailsID = #{inspectionDetailsID,jdbcType=INTEGER},
            doctorID            = #{doctorID,jdbcType=INTEGER},
            appearUserID        = #{appearUserID,jdbcType=INTEGER},
            changeUserID        = #{changeUserID,jdbcType=INTEGER},
            appearDate          = #{appearDate,jdbcType=TIMESTAMP},
            changeDate          = #{changeDate,jdbcType=TIMESTAMP},
            `status`            = #{status,jdbcType=CHAR},
            reserve1            = #{reserve1,jdbcType=VARCHAR},
            reserve2            = #{reserve2,jdbcType=VARCHAR},
            `view`              = #{view,jdbcType=LONGVARCHAR},
            diagnosis           = #{diagnosis,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id = "updateByPrimaryKey" parameterType = "edu.neu.hospital.bean.basicTableBean.InspectionResult">
        update inspectionresult
        set inspectionDetailsID = #{inspectionDetailsID,jdbcType=INTEGER},
            doctorID            = #{doctorID,jdbcType=INTEGER},
            appearUserID        = #{appearUserID,jdbcType=INTEGER},
            changeUserID        = #{changeUserID,jdbcType=INTEGER},
            appearDate          = #{appearDate,jdbcType=TIMESTAMP},
            changeDate          = #{changeDate,jdbcType=TIMESTAMP},
            `status`            = #{status,jdbcType=CHAR},
            reserve1            = #{reserve1,jdbcType=VARCHAR},
            reserve2            = #{reserve2,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>