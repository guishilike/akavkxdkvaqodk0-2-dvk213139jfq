<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace = "edu.neu.hospital.dao.basicTableDao.DisposalDao">
    <resultMap id = "BaseResultMap" type = "edu.neu.hospital.bean.basicTableBean.Disposal">
        <id column = "id" jdbcType = "INTEGER" property = "id"/>
        <result column = "medicalRecordID" jdbcType = "INTEGER" property = "medicalRecordID"/>
        <result column = "doctorID" jdbcType = "INTEGER" property = "doctorID"/>
        <result column = "num" jdbcType = "INTEGER" property = "num"/>
        <result column = "mark" jdbcType = "INTEGER" property = "mark"/>
        <result column = "appearUserID" jdbcType = "INTEGER" property = "appearUserID"/>
        <result column = "changeUserID" jdbcType = "INTEGER" property = "changeUserID"/>
        <result column = "appearDate" jdbcType = "TIMESTAMP" property = "appearDate"/>
        <result column = "changeDate" jdbcType = "TIMESTAMP" property = "changeDate"/>
        <result column = "isDrawn" jdbcType = "CHAR" property = "isDrawn"/>
        <result column = "isRegistered" jdbcType = "CHAR" property = "isRegistered"/>
        <result column = "status" jdbcType = "CHAR" property = "status"/>
    </resultMap>
    <sql id = "Example_Where_Clause">
        <where>
            <foreach collection = "oredCriteria" item = "criteria" separator = "or">
                <if test = "criteria.valid">
                    <trim prefix = "(" prefixOverrides = "and" suffix = ")">
                        <foreach collection = "criteria.criteria" item = "criterion">
                            <choose>
                                <when test = "criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test = "criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test = "criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test = "criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close = ")" collection = "criterion.value" item = "listItem" open = "("
                                             separator = ",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id = "Update_By_Example_Where_Clause">
        <where>
            <foreach collection = "example.oredCriteria" item = "criteria" separator = "or">
                <if test = "criteria.valid">
                    <trim prefix = "(" prefixOverrides = "and" suffix = ")">
                        <foreach collection = "criteria.criteria" item = "criterion">
                            <choose>
                                <when test = "criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test = "criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test = "criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test = "criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close = ")" collection = "criterion.value" item = "listItem" open = "("
                                             separator = ",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id = "Base_Column_List">
        id, medicalRecordID, doctorID, num, mark, appearUserID, changeUserID, appearDate,
        changeDate, isDrawn, isRegistered, `status`
    </sql>
    <select id = "selectByExample" parameterType = "edu.neu.hospital.example.basicTableExample.DisposalExample"
            resultMap = "BaseResultMap">
        select
        <if test = "distinct">
            distinct
        </if>
        <include refid = "Base_Column_List"/>
        from disposal
        <if test = "_parameter != null">
            <include refid = "Example_Where_Clause"/>
        </if>
        <if test = "orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test = "limit != null">
            <if test = "offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test = "offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id = "selectByPrimaryKey" parameterType = "java.lang.Integer" resultMap = "BaseResultMap">
        select
        <include refid = "Base_Column_List"/>
        from disposal
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id = "deleteByPrimaryKey" parameterType = "java.lang.Integer">
        delete
        from disposal
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id = "deleteByExample" parameterType = "edu.neu.hospital.example.basicTableExample.DisposalExample">
        delete from disposal
        <if test = "_parameter != null">
            <include refid = "Example_Where_Clause"/>
        </if>
    </delete>
    <insert id = "insert" keyColumn = "id" keyProperty = "id" parameterType = "edu.neu.hospital.bean.basicTableBean.Disposal"
            useGeneratedKeys = "true">
        insert into disposal (medicalRecordID, doctorID, num,
                              mark, appearUserID, changeUserID,
                              appearDate, changeDate, isDrawn,
                              isRegistered, `status`)
        values (#{medicalRecordID,jdbcType=INTEGER}, #{doctorID,jdbcType=INTEGER}, #{num,jdbcType=INTEGER},
                #{mark,jdbcType=INTEGER}, #{appearUserID,jdbcType=INTEGER}, #{changeUserID,jdbcType=INTEGER},
                #{appearDate,jdbcType=TIMESTAMP}, #{changeDate,jdbcType=TIMESTAMP}, #{isDrawn,jdbcType=CHAR},
                #{isRegistered,jdbcType=CHAR}, #{status,jdbcType=CHAR})
    </insert>
    <insert id = "insertSelective" keyColumn = "id" keyProperty = "id" parameterType = "edu.neu.hospital.bean.basicTableBean.Disposal"
            useGeneratedKeys = "true">
        insert into disposal
        <trim prefix = "(" suffix = ")" suffixOverrides = ",">
            <if test = "medicalRecordID != null">
                medicalRecordID,
            </if>
            <if test = "doctorID != null">
                doctorID,
            </if>
            <if test = "num != null">
                num,
            </if>
            <if test = "mark != null">
                mark,
            </if>
            <if test = "appearUserID != null">
                appearUserID,
            </if>
            <if test = "changeUserID != null">
                changeUserID,
            </if>
            <if test = "appearDate != null">
                appearDate,
            </if>
            <if test = "changeDate != null">
                changeDate,
            </if>
            <if test = "isDrawn != null">
                isDrawn,
            </if>
            <if test = "isRegistered != null">
                isRegistered,
            </if>
            <if test = "status != null">
                `status`,
            </if>
        </trim>
        <trim prefix = "values (" suffix = ")" suffixOverrides = ",">
            <if test = "medicalRecordID != null">
                #{medicalRecordID,jdbcType=INTEGER},
            </if>
            <if test = "doctorID != null">
                #{doctorID,jdbcType=INTEGER},
            </if>
            <if test = "num != null">
                #{num,jdbcType=INTEGER},
            </if>
            <if test = "mark != null">
                #{mark,jdbcType=INTEGER},
            </if>
            <if test = "appearUserID != null">
                #{appearUserID,jdbcType=INTEGER},
            </if>
            <if test = "changeUserID != null">
                #{changeUserID,jdbcType=INTEGER},
            </if>
            <if test = "appearDate != null">
                #{appearDate,jdbcType=TIMESTAMP},
            </if>
            <if test = "changeDate != null">
                #{changeDate,jdbcType=TIMESTAMP},
            </if>
            <if test = "isDrawn != null">
                #{isDrawn,jdbcType=CHAR},
            </if>
            <if test = "isRegistered != null">
                #{isRegistered,jdbcType=CHAR},
            </if>
            <if test = "status != null">
                #{status,jdbcType=CHAR},
            </if>
        </trim>
    </insert>
    <select id = "countByExample" parameterType = "edu.neu.hospital.example.basicTableExample.DisposalExample"
            resultType = "java.lang.Long">
        select count(*) from disposal
        <if test = "_parameter != null">
            <include refid = "Example_Where_Clause"/>
        </if>
    </select>
    <update id = "updateByExampleSelective" parameterType = "map">
        update disposal
        <set>
            <if test = "record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test = "record.medicalRecordID != null">
                medicalRecordID = #{record.medicalRecordID,jdbcType=INTEGER},
            </if>
            <if test = "record.doctorID != null">
                doctorID = #{record.doctorID,jdbcType=INTEGER},
            </if>
            <if test = "record.num != null">
                num = #{record.num,jdbcType=INTEGER},
            </if>
            <if test = "record.mark != null">
                mark = #{record.mark,jdbcType=INTEGER},
            </if>
            <if test = "record.appearUserID != null">
                appearUserID = #{record.appearUserID,jdbcType=INTEGER},
            </if>
            <if test = "record.changeUserID != null">
                changeUserID = #{record.changeUserID,jdbcType=INTEGER},
            </if>
            <if test = "record.appearDate != null">
                appearDate = #{record.appearDate,jdbcType=TIMESTAMP},
            </if>
            <if test = "record.changeDate != null">
                changeDate = #{record.changeDate,jdbcType=TIMESTAMP},
            </if>
            <if test = "record.isDrawn != null">
                isDrawn = #{record.isDrawn,jdbcType=CHAR},
            </if>
            <if test = "record.isRegistered != null">
                isRegistered = #{record.isRegistered,jdbcType=CHAR},
            </if>
            <if test = "record.status != null">
                `status` = #{record.status,jdbcType=CHAR},
            </if>
        </set>
        <if test = "_parameter != null">
            <include refid = "Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id = "updateByExample" parameterType = "map">
        update disposal
        set id = #{record.id,jdbcType=INTEGER},
        medicalRecordID = #{record.medicalRecordID,jdbcType=INTEGER},
        doctorID = #{record.doctorID,jdbcType=INTEGER},
        num = #{record.num,jdbcType=INTEGER},
        mark = #{record.mark,jdbcType=INTEGER},
        appearUserID = #{record.appearUserID,jdbcType=INTEGER},
        changeUserID = #{record.changeUserID,jdbcType=INTEGER},
        appearDate = #{record.appearDate,jdbcType=TIMESTAMP},
        changeDate = #{record.changeDate,jdbcType=TIMESTAMP},
        isDrawn = #{record.isDrawn,jdbcType=CHAR},
        isRegistered = #{record.isRegistered,jdbcType=CHAR},
        `status` = #{record.status,jdbcType=CHAR}
        <if test = "_parameter != null">
            <include refid = "Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id = "updateByPrimaryKeySelective" parameterType = "edu.neu.hospital.bean.basicTableBean.Disposal">
        update disposal
        <set>
            <if test = "medicalRecordID != null">
                medicalRecordID = #{medicalRecordID,jdbcType=INTEGER},
            </if>
            <if test = "doctorID != null">
                doctorID = #{doctorID,jdbcType=INTEGER},
            </if>
            <if test = "num != null">
                num = #{num,jdbcType=INTEGER},
            </if>
            <if test = "mark != null">
                mark = #{mark,jdbcType=INTEGER},
            </if>
            <if test = "appearUserID != null">
                appearUserID = #{appearUserID,jdbcType=INTEGER},
            </if>
            <if test = "changeUserID != null">
                changeUserID = #{changeUserID,jdbcType=INTEGER},
            </if>
            <if test = "appearDate != null">
                appearDate = #{appearDate,jdbcType=TIMESTAMP},
            </if>
            <if test = "changeDate != null">
                changeDate = #{changeDate,jdbcType=TIMESTAMP},
            </if>
            <if test = "isDrawn != null">
                isDrawn = #{isDrawn,jdbcType=CHAR},
            </if>
            <if test = "isRegistered != null">
                isRegistered = #{isRegistered,jdbcType=CHAR},
            </if>
            <if test = "status != null">
                `status` = #{status,jdbcType=CHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id = "updateByPrimaryKey" parameterType = "edu.neu.hospital.bean.basicTableBean.Disposal">
        update disposal
        set medicalRecordID = #{medicalRecordID,jdbcType=INTEGER},
            doctorID        = #{doctorID,jdbcType=INTEGER},
            num             = #{num,jdbcType=INTEGER},
            mark            = #{mark,jdbcType=INTEGER},
            appearUserID    = #{appearUserID,jdbcType=INTEGER},
            changeUserID    = #{changeUserID,jdbcType=INTEGER},
            appearDate      = #{appearDate,jdbcType=TIMESTAMP},
            changeDate      = #{changeDate,jdbcType=TIMESTAMP},
            isDrawn         = #{isDrawn,jdbcType=CHAR},
            isRegistered    = #{isRegistered,jdbcType=CHAR},
            `status`        = #{status,jdbcType=CHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>