<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace = "edu.neu.hospital.dao.basicTableDao.MaterialsDao">
    <resultMap id = "BaseResultMap" type = "edu.neu.hospital.bean.basicTableBean.Materials">
        <id column = "id" jdbcType = "INTEGER" property = "id"/>
        <result column = "code" jdbcType = "VARCHAR" property = "code"/>
        <result column = "name" jdbcType = "VARCHAR" property = "name"/>
        <result column = "format" jdbcType = "VARCHAR" property = "format"/>
        <result column = "price" jdbcType = "DECIMAL" property = "price"/>
        <result column = "appearUserID" jdbcType = "INTEGER" property = "appearUserID"/>
        <result column = "appearDate" jdbcType = "TIMESTAMP" property = "appearDate"/>
        <result column = "changeUserID" jdbcType = "INTEGER" property = "changeUserID"/>
        <result column = "changeDate" jdbcType = "TIMESTAMP" property = "changeDate"/>
        <result column = "status" jdbcType = "CHAR" property = "status"/>
    </resultMap>
    <sql id = "Example_Where_Clause">
        <where>
            <foreach collection = "oredCriteria" item = "criteria" separator = "or">
                <if test = "criteria.valid">
                    <trim prefix = "(" prefixOverrides = "and" suffix = ")">
                        <foreach collection = "criteria.criteria" item = "criterion">
                            <choose>
                                <when test = "criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test = "criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test = "criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test = "criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close = ")" collection = "criterion.value" item = "listItem" open = "("
                                             separator = ",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id = "Update_By_Example_Where_Clause">
        <where>
            <foreach collection = "example.oredCriteria" item = "criteria" separator = "or">
                <if test = "criteria.valid">
                    <trim prefix = "(" prefixOverrides = "and" suffix = ")">
                        <foreach collection = "criteria.criteria" item = "criterion">
                            <choose>
                                <when test = "criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test = "criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test = "criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test = "criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close = ")" collection = "criterion.value" item = "listItem" open = "("
                                             separator = ",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id = "Base_Column_List">
        id, code, `name`, format, price, appearUserID, appearDate, changeUserID, changeDate,
        `status`
    </sql>
    <select id = "selectByExample" parameterType = "edu.neu.hospital.example.basicTableExample.MaterialsExample"
            resultMap = "BaseResultMap">
        select
        <if test = "distinct">
            distinct
        </if>
        <include refid = "Base_Column_List"/>
        from materials
        <if test = "_parameter != null">
            <include refid = "Example_Where_Clause"/>
        </if>
        <if test = "orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test = "limit != null">
            <if test = "offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test = "offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id = "selectByPrimaryKey" parameterType = "java.lang.Integer" resultMap = "BaseResultMap">
        select
        <include refid = "Base_Column_List"/>
        from materials
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id = "deleteByPrimaryKey" parameterType = "java.lang.Integer">
        delete
        from materials
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id = "deleteByExample" parameterType = "edu.neu.hospital.example.basicTableExample.MaterialsExample">
        delete from materials
        <if test = "_parameter != null">
            <include refid = "Example_Where_Clause"/>
        </if>
    </delete>
    <insert id = "insert" keyColumn = "id" keyProperty = "id" parameterType = "edu.neu.hospital.bean.basicTableBean.Materials"
            useGeneratedKeys = "true">
        insert into materials (code, `name`, format,
                               price, appearUserID, appearDate,
                               changeUserID, changeDate, `status`)
        values (#{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{format,jdbcType=VARCHAR},
                #{price,jdbcType=DECIMAL}, #{appearUserID,jdbcType=INTEGER}, #{appearDate,jdbcType=TIMESTAMP},
                #{changeUserID,jdbcType=INTEGER}, #{changeDate,jdbcType=TIMESTAMP}, #{status,jdbcType=CHAR})
    </insert>
    <insert id = "insertSelective" keyColumn = "id" keyProperty = "id" parameterType = "edu.neu.hospital.bean.basicTableBean.Materials"
            useGeneratedKeys = "true">
        insert into materials
        <trim prefix = "(" suffix = ")" suffixOverrides = ",">
            <if test = "code != null">
                code,
            </if>
            <if test = "name != null">
                `name`,
            </if>
            <if test = "format != null">
                format,
            </if>
            <if test = "price != null">
                price,
            </if>
            <if test = "appearUserID != null">
                appearUserID,
            </if>
            <if test = "appearDate != null">
                appearDate,
            </if>
            <if test = "changeUserID != null">
                changeUserID,
            </if>
            <if test = "changeDate != null">
                changeDate,
            </if>
            <if test = "status != null">
                `status`,
            </if>
        </trim>
        <trim prefix = "values (" suffix = ")" suffixOverrides = ",">
            <if test = "code != null">
                #{code,jdbcType=VARCHAR},
            </if>
            <if test = "name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test = "format != null">
                #{format,jdbcType=VARCHAR},
            </if>
            <if test = "price != null">
                #{price,jdbcType=DECIMAL},
            </if>
            <if test = "appearUserID != null">
                #{appearUserID,jdbcType=INTEGER},
            </if>
            <if test = "appearDate != null">
                #{appearDate,jdbcType=TIMESTAMP},
            </if>
            <if test = "changeUserID != null">
                #{changeUserID,jdbcType=INTEGER},
            </if>
            <if test = "changeDate != null">
                #{changeDate,jdbcType=TIMESTAMP},
            </if>
            <if test = "status != null">
                #{status,jdbcType=CHAR},
            </if>
        </trim>
    </insert>
    <select id = "countByExample" parameterType = "edu.neu.hospital.example.basicTableExample.MaterialsExample"
            resultType = "java.lang.Long">
        select count(*) from materials
        <if test = "_parameter != null">
            <include refid = "Example_Where_Clause"/>
        </if>
    </select>
    <update id = "updateByExampleSelective" parameterType = "map">
        update materials
        <set>
            <if test = "record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test = "record.code != null">
                code = #{record.code,jdbcType=VARCHAR},
            </if>
            <if test = "record.name != null">
                `name` = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test = "record.format != null">
                format = #{record.format,jdbcType=VARCHAR},
            </if>
            <if test = "record.price != null">
                price = #{record.price,jdbcType=DECIMAL},
            </if>
            <if test = "record.appearUserID != null">
                appearUserID = #{record.appearUserID,jdbcType=INTEGER},
            </if>
            <if test = "record.appearDate != null">
                appearDate = #{record.appearDate,jdbcType=TIMESTAMP},
            </if>
            <if test = "record.changeUserID != null">
                changeUserID = #{record.changeUserID,jdbcType=INTEGER},
            </if>
            <if test = "record.changeDate != null">
                changeDate = #{record.changeDate,jdbcType=TIMESTAMP},
            </if>
            <if test = "record.status != null">
                `status` = #{record.status,jdbcType=CHAR},
            </if>
        </set>
        <if test = "_parameter != null">
            <include refid = "Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id = "updateByExample" parameterType = "map">
        update materials
        set id = #{record.id,jdbcType=INTEGER},
        code = #{record.code,jdbcType=VARCHAR},
        `name` = #{record.name,jdbcType=VARCHAR},
        format = #{record.format,jdbcType=VARCHAR},
        price = #{record.price,jdbcType=DECIMAL},
        appearUserID = #{record.appearUserID,jdbcType=INTEGER},
        appearDate = #{record.appearDate,jdbcType=TIMESTAMP},
        changeUserID = #{record.changeUserID,jdbcType=INTEGER},
        changeDate = #{record.changeDate,jdbcType=TIMESTAMP},
        `status` = #{record.status,jdbcType=CHAR}
        <if test = "_parameter != null">
            <include refid = "Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id = "updateByPrimaryKeySelective" parameterType = "edu.neu.hospital.bean.basicTableBean.Materials">
        update materials
        <set>
            <if test = "code != null">
                code = #{code,jdbcType=VARCHAR},
            </if>
            <if test = "name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test = "format != null">
                format = #{format,jdbcType=VARCHAR},
            </if>
            <if test = "price != null">
                price = #{price,jdbcType=DECIMAL},
            </if>
            <if test = "appearUserID != null">
                appearUserID = #{appearUserID,jdbcType=INTEGER},
            </if>
            <if test = "appearDate != null">
                appearDate = #{appearDate,jdbcType=TIMESTAMP},
            </if>
            <if test = "changeUserID != null">
                changeUserID = #{changeUserID,jdbcType=INTEGER},
            </if>
            <if test = "changeDate != null">
                changeDate = #{changeDate,jdbcType=TIMESTAMP},
            </if>
            <if test = "status != null">
                `status` = #{status,jdbcType=CHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id = "updateByPrimaryKey" parameterType = "edu.neu.hospital.bean.basicTableBean.Materials">
        update materials
        set code         = #{code,jdbcType=VARCHAR},
            `name`       = #{name,jdbcType=VARCHAR},
            format       = #{format,jdbcType=VARCHAR},
            price        = #{price,jdbcType=DECIMAL},
            appearUserID = #{appearUserID,jdbcType=INTEGER},
            appearDate   = #{appearDate,jdbcType=TIMESTAMP},
            changeUserID = #{changeUserID,jdbcType=INTEGER},
            changeDate   = #{changeDate,jdbcType=TIMESTAMP},
            `status`     = #{status,jdbcType=CHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>