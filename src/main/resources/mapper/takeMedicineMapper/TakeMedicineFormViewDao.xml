<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.neu.hospital.dao.TakeMedicineDao.TakeMedicineFormViewDao">
  <resultMap id="BaseResultMap" type="edu.neu.hospital.bean.takeMedicineBean.TakeMedicineFormView">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="medicalRecordID" jdbcType="INTEGER" property="medicalRecordID" />
    <result column="medicalRecordNo" jdbcType="CHAR" property="medicalRecordNo" />
    <result column="doctorID" jdbcType="INTEGER" property="doctorID" />
    <result column="realName" jdbcType="VARCHAR" property="realName" />
    <result column="patientName" jdbcType="VARCHAR" property="patientName" />
    <result column="patientID" jdbcType="INTEGER" property="patientID" />
    <result column="IdentityCardNo" jdbcType="CHAR" property="identityCardNo" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="birthday" jdbcType="TIMESTAMP" property="birthday" />
    <result column="familyAddress" jdbcType="VARCHAR" property="familyAddress" />
    <result column="diagnosisStatus" jdbcType="CHAR" property="diagnosisStatus" />
    <result column="appearDate" jdbcType="TIMESTAMP" property="appearDate" />
    <result column="changeDate" jdbcType="TIMESTAMP" property="changeDate" />
    <result column="departmentID" jdbcType="INTEGER" property="departmentID" />
    <result column="deptName" jdbcType="VARCHAR" property="deptName" />
    <result column="deptCategoryID" jdbcType="INTEGER" property="deptCategoryID" />
    <result column="deptTypeID" jdbcType="INTEGER" property="deptTypeID" />
    <result column="deptCode" jdbcType="VARCHAR" property="deptCode" />
    <result column="deptTypeName" jdbcType="VARCHAR" property="deptTypeName" />
    <result column="deptCategoryName" jdbcType="VARCHAR" property="deptCategoryName" />
    <result column="mark" jdbcType="INTEGER" property="mark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, medicalRecordID, medicalRecordNo, doctorID, realName, patientName, patientID, 
    IdentityCardNo, age, gender, birthday, familyAddress, diagnosisStatus, appearDate, 
    changeDate, departmentID, deptName, deptCategoryID, deptTypeID, deptCode, deptTypeName, 
    deptCategoryName, mark
  </sql>
  <select id="selectByExample" parameterType="edu.neu.hospital.example.takeMedicineExample.TakeMedicineFormViewExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from takemedicineformview
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <delete id="deleteByExample" parameterType="edu.neu.hospital.example.takeMedicineExample.TakeMedicineFormViewExample">
    delete from takemedicineformview
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.neu.hospital.bean.takeMedicineBean.TakeMedicineFormView">
    insert into takemedicineformview (id, medicalRecordID, medicalRecordNo, 
      doctorID, realName, patientName, 
      patientID, IdentityCardNo, age, 
      gender, birthday, familyAddress, 
      diagnosisStatus, appearDate, changeDate, 
      departmentID, deptName, deptCategoryID, 
      deptTypeID, deptCode, deptTypeName, 
      deptCategoryName, mark)
    values (#{id,jdbcType=INTEGER}, #{medicalRecordID,jdbcType=INTEGER}, #{medicalRecordNo,jdbcType=CHAR}, 
      #{doctorID,jdbcType=INTEGER}, #{realName,jdbcType=VARCHAR}, #{patientName,jdbcType=VARCHAR}, 
      #{patientID,jdbcType=INTEGER}, #{identityCardNo,jdbcType=CHAR}, #{age,jdbcType=INTEGER}, 
      #{gender,jdbcType=CHAR}, #{birthday,jdbcType=TIMESTAMP}, #{familyAddress,jdbcType=VARCHAR}, 
      #{diagnosisStatus,jdbcType=CHAR}, #{appearDate,jdbcType=TIMESTAMP}, #{changeDate,jdbcType=TIMESTAMP}, 
      #{departmentID,jdbcType=INTEGER}, #{deptName,jdbcType=VARCHAR}, #{deptCategoryID,jdbcType=INTEGER}, 
      #{deptTypeID,jdbcType=INTEGER}, #{deptCode,jdbcType=VARCHAR}, #{deptTypeName,jdbcType=VARCHAR}, 
      #{deptCategoryName,jdbcType=VARCHAR}, #{mark,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="edu.neu.hospital.bean.takeMedicineBean.TakeMedicineFormView">
    insert into takemedicineformview
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="medicalRecordID != null">
        medicalRecordID,
      </if>
      <if test="medicalRecordNo != null">
        medicalRecordNo,
      </if>
      <if test="doctorID != null">
        doctorID,
      </if>
      <if test="realName != null">
        realName,
      </if>
      <if test="patientName != null">
        patientName,
      </if>
      <if test="patientID != null">
        patientID,
      </if>
      <if test="identityCardNo != null">
        IdentityCardNo,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="familyAddress != null">
        familyAddress,
      </if>
      <if test="diagnosisStatus != null">
        diagnosisStatus,
      </if>
      <if test="appearDate != null">
        appearDate,
      </if>
      <if test="changeDate != null">
        changeDate,
      </if>
      <if test="departmentID != null">
        departmentID,
      </if>
      <if test="deptName != null">
        deptName,
      </if>
      <if test="deptCategoryID != null">
        deptCategoryID,
      </if>
      <if test="deptTypeID != null">
        deptTypeID,
      </if>
      <if test="deptCode != null">
        deptCode,
      </if>
      <if test="deptTypeName != null">
        deptTypeName,
      </if>
      <if test="deptCategoryName != null">
        deptCategoryName,
      </if>
      <if test="mark != null">
        mark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="medicalRecordID != null">
        #{medicalRecordID,jdbcType=INTEGER},
      </if>
      <if test="medicalRecordNo != null">
        #{medicalRecordNo,jdbcType=CHAR},
      </if>
      <if test="doctorID != null">
        #{doctorID,jdbcType=INTEGER},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="patientName != null">
        #{patientName,jdbcType=VARCHAR},
      </if>
      <if test="patientID != null">
        #{patientID,jdbcType=INTEGER},
      </if>
      <if test="identityCardNo != null">
        #{identityCardNo,jdbcType=CHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="familyAddress != null">
        #{familyAddress,jdbcType=VARCHAR},
      </if>
      <if test="diagnosisStatus != null">
        #{diagnosisStatus,jdbcType=CHAR},
      </if>
      <if test="appearDate != null">
        #{appearDate,jdbcType=TIMESTAMP},
      </if>
      <if test="changeDate != null">
        #{changeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="departmentID != null">
        #{departmentID,jdbcType=INTEGER},
      </if>
      <if test="deptName != null">
        #{deptName,jdbcType=VARCHAR},
      </if>
      <if test="deptCategoryID != null">
        #{deptCategoryID,jdbcType=INTEGER},
      </if>
      <if test="deptTypeID != null">
        #{deptTypeID,jdbcType=INTEGER},
      </if>
      <if test="deptCode != null">
        #{deptCode,jdbcType=VARCHAR},
      </if>
      <if test="deptTypeName != null">
        #{deptTypeName,jdbcType=VARCHAR},
      </if>
      <if test="deptCategoryName != null">
        #{deptCategoryName,jdbcType=VARCHAR},
      </if>
      <if test="mark != null">
        #{mark,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.neu.hospital.example.takeMedicineExample.TakeMedicineFormViewExample" resultType="java.lang.Long">
    select count(*) from takemedicineformview
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update takemedicineformview
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.medicalRecordID != null">
        medicalRecordID = #{record.medicalRecordID,jdbcType=INTEGER},
      </if>
      <if test="record.medicalRecordNo != null">
        medicalRecordNo = #{record.medicalRecordNo,jdbcType=CHAR},
      </if>
      <if test="record.doctorID != null">
        doctorID = #{record.doctorID,jdbcType=INTEGER},
      </if>
      <if test="record.realName != null">
        realName = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.patientName != null">
        patientName = #{record.patientName,jdbcType=VARCHAR},
      </if>
      <if test="record.patientID != null">
        patientID = #{record.patientID,jdbcType=INTEGER},
      </if>
      <if test="record.identityCardNo != null">
        IdentityCardNo = #{record.identityCardNo,jdbcType=CHAR},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=CHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.familyAddress != null">
        familyAddress = #{record.familyAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.diagnosisStatus != null">
        diagnosisStatus = #{record.diagnosisStatus,jdbcType=CHAR},
      </if>
      <if test="record.appearDate != null">
        appearDate = #{record.appearDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.changeDate != null">
        changeDate = #{record.changeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.departmentID != null">
        departmentID = #{record.departmentID,jdbcType=INTEGER},
      </if>
      <if test="record.deptName != null">
        deptName = #{record.deptName,jdbcType=VARCHAR},
      </if>
      <if test="record.deptCategoryID != null">
        deptCategoryID = #{record.deptCategoryID,jdbcType=INTEGER},
      </if>
      <if test="record.deptTypeID != null">
        deptTypeID = #{record.deptTypeID,jdbcType=INTEGER},
      </if>
      <if test="record.deptCode != null">
        deptCode = #{record.deptCode,jdbcType=VARCHAR},
      </if>
      <if test="record.deptTypeName != null">
        deptTypeName = #{record.deptTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.deptCategoryName != null">
        deptCategoryName = #{record.deptCategoryName,jdbcType=VARCHAR},
      </if>
      <if test="record.mark != null">
        mark = #{record.mark,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update takemedicineformview
    set id = #{record.id,jdbcType=INTEGER},
      medicalRecordID = #{record.medicalRecordID,jdbcType=INTEGER},
      medicalRecordNo = #{record.medicalRecordNo,jdbcType=CHAR},
      doctorID = #{record.doctorID,jdbcType=INTEGER},
      realName = #{record.realName,jdbcType=VARCHAR},
      patientName = #{record.patientName,jdbcType=VARCHAR},
      patientID = #{record.patientID,jdbcType=INTEGER},
      IdentityCardNo = #{record.identityCardNo,jdbcType=CHAR},
      age = #{record.age,jdbcType=INTEGER},
      gender = #{record.gender,jdbcType=CHAR},
      birthday = #{record.birthday,jdbcType=TIMESTAMP},
      familyAddress = #{record.familyAddress,jdbcType=VARCHAR},
      diagnosisStatus = #{record.diagnosisStatus,jdbcType=CHAR},
      appearDate = #{record.appearDate,jdbcType=TIMESTAMP},
      changeDate = #{record.changeDate,jdbcType=TIMESTAMP},
      departmentID = #{record.departmentID,jdbcType=INTEGER},
      deptName = #{record.deptName,jdbcType=VARCHAR},
      deptCategoryID = #{record.deptCategoryID,jdbcType=INTEGER},
      deptTypeID = #{record.deptTypeID,jdbcType=INTEGER},
      deptCode = #{record.deptCode,jdbcType=VARCHAR},
      deptTypeName = #{record.deptTypeName,jdbcType=VARCHAR},
      deptCategoryName = #{record.deptCategoryName,jdbcType=VARCHAR},
      mark = #{record.mark,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>