<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.neu.hospital.dao.ExpenseclassviewDao">
  <resultMap id="BaseResultMap" type="edu.neu.hospital.bean.Expenseclassview">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="appearUserID" jdbcType="INTEGER" property="appearUserID" />
    <result column="appearUserName" jdbcType="VARCHAR" property="appearUserName" />
    <result column="appearDate" jdbcType="TIMESTAMP" property="appearDate" />
    <result column="changerUserID" jdbcType="INTEGER" property="changerUserID" />
    <result column="changeUserName" jdbcType="VARCHAR" property="changeUserName" />
    <result column="changeDate" jdbcType="TIMESTAMP" property="changeDate" />
    <result column="status" jdbcType="CHAR" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, code, `name`, appearUserID, appearUserName, appearDate, changerUserID, changeUserName, 
    changeDate, `status`
  </sql>
  <select id="selectByExample" parameterType="edu.neu.hospital.example.ExpenseclassviewExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from expenseclassview
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <delete id="deleteByExample" parameterType="edu.neu.hospital.example.ExpenseclassviewExample">
    delete from expenseclassview
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.neu.hospital.bean.Expenseclassview">
    insert into expenseclassview (id, code, `name`, 
      appearUserID, appearUserName, appearDate, 
      changerUserID, changeUserName, changeDate, 
      `status`)
    values (#{id,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{appearUserID,jdbcType=INTEGER}, #{appearUserName,jdbcType=VARCHAR}, #{appearDate,jdbcType=TIMESTAMP}, 
      #{changerUserID,jdbcType=INTEGER}, #{changeUserName,jdbcType=VARCHAR}, #{changeDate,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="edu.neu.hospital.bean.Expenseclassview">
    insert into expenseclassview
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="appearUserID != null">
        appearUserID,
      </if>
      <if test="appearUserName != null">
        appearUserName,
      </if>
      <if test="appearDate != null">
        appearDate,
      </if>
      <if test="changerUserID != null">
        changerUserID,
      </if>
      <if test="changeUserName != null">
        changeUserName,
      </if>
      <if test="changeDate != null">
        changeDate,
      </if>
      <if test="status != null">
        `status`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="appearUserID != null">
        #{appearUserID,jdbcType=INTEGER},
      </if>
      <if test="appearUserName != null">
        #{appearUserName,jdbcType=VARCHAR},
      </if>
      <if test="appearDate != null">
        #{appearDate,jdbcType=TIMESTAMP},
      </if>
      <if test="changerUserID != null">
        #{changerUserID,jdbcType=INTEGER},
      </if>
      <if test="changeUserName != null">
        #{changeUserName,jdbcType=VARCHAR},
      </if>
      <if test="changeDate != null">
        #{changeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.neu.hospital.example.ExpenseclassviewExample" resultType="java.lang.Long">
    select count(*) from expenseclassview
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update expenseclassview
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.appearUserID != null">
        appearUserID = #{record.appearUserID,jdbcType=INTEGER},
      </if>
      <if test="record.appearUserName != null">
        appearUserName = #{record.appearUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.appearDate != null">
        appearDate = #{record.appearDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.changerUserID != null">
        changerUserID = #{record.changerUserID,jdbcType=INTEGER},
      </if>
      <if test="record.changeUserName != null">
        changeUserName = #{record.changeUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.changeDate != null">
        changeDate = #{record.changeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update expenseclassview
    set id = #{record.id,jdbcType=INTEGER},
      code = #{record.code,jdbcType=VARCHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      appearUserID = #{record.appearUserID,jdbcType=INTEGER},
      appearUserName = #{record.appearUserName,jdbcType=VARCHAR},
      appearDate = #{record.appearDate,jdbcType=TIMESTAMP},
      changerUserID = #{record.changerUserID,jdbcType=INTEGER},
      changeUserName = #{record.changeUserName,jdbcType=VARCHAR},
      changeDate = #{record.changeDate,jdbcType=TIMESTAMP},
      `status` = #{record.status,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>