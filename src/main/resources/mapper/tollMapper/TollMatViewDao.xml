<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.neu.hospital.dao.tollDao.TollMatViewDao">
  <resultMap id="BaseResultMap" type="edu.neu.hospital.bean.tollBean.TollMatView">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="medicalRecordID" jdbcType="INTEGER" property="medicalRecordID" />
    <result column="feeCategoryID" jdbcType="INTEGER" property="feeCategoryID" />
    <result column="chargeItemID" jdbcType="INTEGER" property="chargeItemID" />
    <result column="expID" jdbcType="INTEGER" property="expID" />
    <result column="fee" jdbcType="DECIMAL" property="fee" />
    <result column="tollManID" jdbcType="INTEGER" property="tollManID" />
    <result column="tollDate" jdbcType="TIMESTAMP" property="tollDate" />
    <result column="appearUserID" jdbcType="INTEGER" property="appearUserID" />
    <result column="changeUserID" jdbcType="INTEGER" property="changeUserID" />
    <result column="feeAppearDate" jdbcType="TIMESTAMP" property="feeAppearDate" />
    <result column="feeChangeDate" jdbcType="TIMESTAMP" property="feeChangeDate" />
    <result column="payStatus" jdbcType="INTEGER" property="payStatus" />
    <result column="dateStatus" jdbcType="INTEGER" property="dateStatus" />
    <result column="medicalRecordNo" jdbcType="CHAR" property="medicalRecordNo" />
    <result column="patientID" jdbcType="INTEGER" property="patientID" />
    <result column="patientName" jdbcType="VARCHAR" property="patientName" />
    <result column="IdentityCardNo" jdbcType="CHAR" property="identityCardNo" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="birthday" jdbcType="TIMESTAMP" property="birthday" />
    <result column="familyAddress" jdbcType="VARCHAR" property="familyAddress" />
    <result column="medicinesMaterialsID" jdbcType="INTEGER" property="medicinesMaterialsID" />
    <result column="itemsType" jdbcType="INTEGER" property="itemsType" />
    <result column="dosage" jdbcType="DECIMAL" property="dosage" />
    <result column="matOrMedType" jdbcType="CHAR" property="matOrMedType" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="tollName" jdbcType="VARCHAR" property="tollName" />
    <result column="appearName" jdbcType="VARCHAR" property="appearName" />
    <result column="changeName" jdbcType="VARCHAR" property="changeName" />
    <result column="feeCategoryName" jdbcType="VARCHAR" property="feeCategoryName" />
    <result column="payStatusName" jdbcType="VARCHAR" property="payStatusName" />
    <result column="dateStatusName" jdbcType="VARCHAR" property="dateStatusName" />
    <result column="itemsTypeName" jdbcType="VARCHAR" property="itemsTypeName" />
    <result column="medOrMatName" jdbcType="VARCHAR" property="medOrMatName" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="matName" jdbcType="VARCHAR" property="matName" />
    <result column="format" jdbcType="VARCHAR" property="format" />
    <result column="price" jdbcType="DECIMAL" property="price" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, medicalRecordID, feeCategoryID, chargeItemID, expID, fee, tollManID, tollDate, 
    appearUserID, changeUserID, feeAppearDate, feeChangeDate, payStatus, dateStatus, 
    medicalRecordNo, patientID, patientName, IdentityCardNo, age, gender, birthday, familyAddress, 
    medicinesMaterialsID, itemsType, dosage, matOrMedType, `name`, tollName, appearName, 
    changeName, feeCategoryName, payStatusName, dateStatusName, itemsTypeName, medOrMatName, 
    code, matName, format, price
  </sql>
  <select id="selectByExample" parameterType="edu.neu.hospital.example.tollExample.TollMatViewExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tollmatview
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <delete id="deleteByExample" parameterType="edu.neu.hospital.example.tollExample.TollMatViewExample">
    delete from tollmatview
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.neu.hospital.bean.tollBean.TollMatView">
    insert into tollmatview (id, medicalRecordID, feeCategoryID, 
      chargeItemID, expID, fee, 
      tollManID, tollDate, appearUserID, 
      changeUserID, feeAppearDate, feeChangeDate, 
      payStatus, dateStatus, medicalRecordNo, 
      patientID, patientName, IdentityCardNo, 
      age, gender, birthday, 
      familyAddress, medicinesMaterialsID, itemsType, 
      dosage, matOrMedType, `name`, 
      tollName, appearName, changeName, 
      feeCategoryName, payStatusName, dateStatusName, 
      itemsTypeName, medOrMatName, code, 
      matName, format, price
      )
    values (#{id,jdbcType=INTEGER}, #{medicalRecordID,jdbcType=INTEGER}, #{feeCategoryID,jdbcType=INTEGER}, 
      #{chargeItemID,jdbcType=INTEGER}, #{expID,jdbcType=INTEGER}, #{fee,jdbcType=DECIMAL}, 
      #{tollManID,jdbcType=INTEGER}, #{tollDate,jdbcType=TIMESTAMP}, #{appearUserID,jdbcType=INTEGER}, 
      #{changeUserID,jdbcType=INTEGER}, #{feeAppearDate,jdbcType=TIMESTAMP}, #{feeChangeDate,jdbcType=TIMESTAMP}, 
      #{payStatus,jdbcType=INTEGER}, #{dateStatus,jdbcType=INTEGER}, #{medicalRecordNo,jdbcType=CHAR}, 
      #{patientID,jdbcType=INTEGER}, #{patientName,jdbcType=VARCHAR}, #{identityCardNo,jdbcType=CHAR}, 
      #{age,jdbcType=INTEGER}, #{gender,jdbcType=CHAR}, #{birthday,jdbcType=TIMESTAMP}, 
      #{familyAddress,jdbcType=VARCHAR}, #{medicinesMaterialsID,jdbcType=INTEGER}, #{itemsType,jdbcType=INTEGER}, 
      #{dosage,jdbcType=DECIMAL}, #{matOrMedType,jdbcType=CHAR}, #{name,jdbcType=VARCHAR}, 
      #{tollName,jdbcType=VARCHAR}, #{appearName,jdbcType=VARCHAR}, #{changeName,jdbcType=VARCHAR}, 
      #{feeCategoryName,jdbcType=VARCHAR}, #{payStatusName,jdbcType=VARCHAR}, #{dateStatusName,jdbcType=VARCHAR}, 
      #{itemsTypeName,jdbcType=VARCHAR}, #{medOrMatName,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, 
      #{matName,jdbcType=VARCHAR}, #{format,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="edu.neu.hospital.bean.tollBean.TollMatView">
    insert into tollmatview
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="medicalRecordID != null">
        medicalRecordID,
      </if>
      <if test="feeCategoryID != null">
        feeCategoryID,
      </if>
      <if test="chargeItemID != null">
        chargeItemID,
      </if>
      <if test="expID != null">
        expID,
      </if>
      <if test="fee != null">
        fee,
      </if>
      <if test="tollManID != null">
        tollManID,
      </if>
      <if test="tollDate != null">
        tollDate,
      </if>
      <if test="appearUserID != null">
        appearUserID,
      </if>
      <if test="changeUserID != null">
        changeUserID,
      </if>
      <if test="feeAppearDate != null">
        feeAppearDate,
      </if>
      <if test="feeChangeDate != null">
        feeChangeDate,
      </if>
      <if test="payStatus != null">
        payStatus,
      </if>
      <if test="dateStatus != null">
        dateStatus,
      </if>
      <if test="medicalRecordNo != null">
        medicalRecordNo,
      </if>
      <if test="patientID != null">
        patientID,
      </if>
      <if test="patientName != null">
        patientName,
      </if>
      <if test="identityCardNo != null">
        IdentityCardNo,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="familyAddress != null">
        familyAddress,
      </if>
      <if test="medicinesMaterialsID != null">
        medicinesMaterialsID,
      </if>
      <if test="itemsType != null">
        itemsType,
      </if>
      <if test="dosage != null">
        dosage,
      </if>
      <if test="matOrMedType != null">
        matOrMedType,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="tollName != null">
        tollName,
      </if>
      <if test="appearName != null">
        appearName,
      </if>
      <if test="changeName != null">
        changeName,
      </if>
      <if test="feeCategoryName != null">
        feeCategoryName,
      </if>
      <if test="payStatusName != null">
        payStatusName,
      </if>
      <if test="dateStatusName != null">
        dateStatusName,
      </if>
      <if test="itemsTypeName != null">
        itemsTypeName,
      </if>
      <if test="medOrMatName != null">
        medOrMatName,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="matName != null">
        matName,
      </if>
      <if test="format != null">
        format,
      </if>
      <if test="price != null">
        price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="medicalRecordID != null">
        #{medicalRecordID,jdbcType=INTEGER},
      </if>
      <if test="feeCategoryID != null">
        #{feeCategoryID,jdbcType=INTEGER},
      </if>
      <if test="chargeItemID != null">
        #{chargeItemID,jdbcType=INTEGER},
      </if>
      <if test="expID != null">
        #{expID,jdbcType=INTEGER},
      </if>
      <if test="fee != null">
        #{fee,jdbcType=DECIMAL},
      </if>
      <if test="tollManID != null">
        #{tollManID,jdbcType=INTEGER},
      </if>
      <if test="tollDate != null">
        #{tollDate,jdbcType=TIMESTAMP},
      </if>
      <if test="appearUserID != null">
        #{appearUserID,jdbcType=INTEGER},
      </if>
      <if test="changeUserID != null">
        #{changeUserID,jdbcType=INTEGER},
      </if>
      <if test="feeAppearDate != null">
        #{feeAppearDate,jdbcType=TIMESTAMP},
      </if>
      <if test="feeChangeDate != null">
        #{feeChangeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="payStatus != null">
        #{payStatus,jdbcType=INTEGER},
      </if>
      <if test="dateStatus != null">
        #{dateStatus,jdbcType=INTEGER},
      </if>
      <if test="medicalRecordNo != null">
        #{medicalRecordNo,jdbcType=CHAR},
      </if>
      <if test="patientID != null">
        #{patientID,jdbcType=INTEGER},
      </if>
      <if test="patientName != null">
        #{patientName,jdbcType=VARCHAR},
      </if>
      <if test="identityCardNo != null">
        #{identityCardNo,jdbcType=CHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="familyAddress != null">
        #{familyAddress,jdbcType=VARCHAR},
      </if>
      <if test="medicinesMaterialsID != null">
        #{medicinesMaterialsID,jdbcType=INTEGER},
      </if>
      <if test="itemsType != null">
        #{itemsType,jdbcType=INTEGER},
      </if>
      <if test="dosage != null">
        #{dosage,jdbcType=DECIMAL},
      </if>
      <if test="matOrMedType != null">
        #{matOrMedType,jdbcType=CHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="tollName != null">
        #{tollName,jdbcType=VARCHAR},
      </if>
      <if test="appearName != null">
        #{appearName,jdbcType=VARCHAR},
      </if>
      <if test="changeName != null">
        #{changeName,jdbcType=VARCHAR},
      </if>
      <if test="feeCategoryName != null">
        #{feeCategoryName,jdbcType=VARCHAR},
      </if>
      <if test="payStatusName != null">
        #{payStatusName,jdbcType=VARCHAR},
      </if>
      <if test="dateStatusName != null">
        #{dateStatusName,jdbcType=VARCHAR},
      </if>
      <if test="itemsTypeName != null">
        #{itemsTypeName,jdbcType=VARCHAR},
      </if>
      <if test="medOrMatName != null">
        #{medOrMatName,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="matName != null">
        #{matName,jdbcType=VARCHAR},
      </if>
      <if test="format != null">
        #{format,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.neu.hospital.example.tollExample.TollMatViewExample" resultType="java.lang.Long">
    select count(*) from tollmatview
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tollmatview
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.medicalRecordID != null">
        medicalRecordID = #{record.medicalRecordID,jdbcType=INTEGER},
      </if>
      <if test="record.feeCategoryID != null">
        feeCategoryID = #{record.feeCategoryID,jdbcType=INTEGER},
      </if>
      <if test="record.chargeItemID != null">
        chargeItemID = #{record.chargeItemID,jdbcType=INTEGER},
      </if>
      <if test="record.expID != null">
        expID = #{record.expID,jdbcType=INTEGER},
      </if>
      <if test="record.fee != null">
        fee = #{record.fee,jdbcType=DECIMAL},
      </if>
      <if test="record.tollManID != null">
        tollManID = #{record.tollManID,jdbcType=INTEGER},
      </if>
      <if test="record.tollDate != null">
        tollDate = #{record.tollDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.appearUserID != null">
        appearUserID = #{record.appearUserID,jdbcType=INTEGER},
      </if>
      <if test="record.changeUserID != null">
        changeUserID = #{record.changeUserID,jdbcType=INTEGER},
      </if>
      <if test="record.feeAppearDate != null">
        feeAppearDate = #{record.feeAppearDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.feeChangeDate != null">
        feeChangeDate = #{record.feeChangeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payStatus != null">
        payStatus = #{record.payStatus,jdbcType=INTEGER},
      </if>
      <if test="record.dateStatus != null">
        dateStatus = #{record.dateStatus,jdbcType=INTEGER},
      </if>
      <if test="record.medicalRecordNo != null">
        medicalRecordNo = #{record.medicalRecordNo,jdbcType=CHAR},
      </if>
      <if test="record.patientID != null">
        patientID = #{record.patientID,jdbcType=INTEGER},
      </if>
      <if test="record.patientName != null">
        patientName = #{record.patientName,jdbcType=VARCHAR},
      </if>
      <if test="record.identityCardNo != null">
        IdentityCardNo = #{record.identityCardNo,jdbcType=CHAR},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=CHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.familyAddress != null">
        familyAddress = #{record.familyAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.medicinesMaterialsID != null">
        medicinesMaterialsID = #{record.medicinesMaterialsID,jdbcType=INTEGER},
      </if>
      <if test="record.itemsType != null">
        itemsType = #{record.itemsType,jdbcType=INTEGER},
      </if>
      <if test="record.dosage != null">
        dosage = #{record.dosage,jdbcType=DECIMAL},
      </if>
      <if test="record.matOrMedType != null">
        matOrMedType = #{record.matOrMedType,jdbcType=CHAR},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.tollName != null">
        tollName = #{record.tollName,jdbcType=VARCHAR},
      </if>
      <if test="record.appearName != null">
        appearName = #{record.appearName,jdbcType=VARCHAR},
      </if>
      <if test="record.changeName != null">
        changeName = #{record.changeName,jdbcType=VARCHAR},
      </if>
      <if test="record.feeCategoryName != null">
        feeCategoryName = #{record.feeCategoryName,jdbcType=VARCHAR},
      </if>
      <if test="record.payStatusName != null">
        payStatusName = #{record.payStatusName,jdbcType=VARCHAR},
      </if>
      <if test="record.dateStatusName != null">
        dateStatusName = #{record.dateStatusName,jdbcType=VARCHAR},
      </if>
      <if test="record.itemsTypeName != null">
        itemsTypeName = #{record.itemsTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.medOrMatName != null">
        medOrMatName = #{record.medOrMatName,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.matName != null">
        matName = #{record.matName,jdbcType=VARCHAR},
      </if>
      <if test="record.format != null">
        format = #{record.format,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tollmatview
    set id = #{record.id,jdbcType=INTEGER},
      medicalRecordID = #{record.medicalRecordID,jdbcType=INTEGER},
      feeCategoryID = #{record.feeCategoryID,jdbcType=INTEGER},
      chargeItemID = #{record.chargeItemID,jdbcType=INTEGER},
      expID = #{record.expID,jdbcType=INTEGER},
      fee = #{record.fee,jdbcType=DECIMAL},
      tollManID = #{record.tollManID,jdbcType=INTEGER},
      tollDate = #{record.tollDate,jdbcType=TIMESTAMP},
      appearUserID = #{record.appearUserID,jdbcType=INTEGER},
      changeUserID = #{record.changeUserID,jdbcType=INTEGER},
      feeAppearDate = #{record.feeAppearDate,jdbcType=TIMESTAMP},
      feeChangeDate = #{record.feeChangeDate,jdbcType=TIMESTAMP},
      payStatus = #{record.payStatus,jdbcType=INTEGER},
      dateStatus = #{record.dateStatus,jdbcType=INTEGER},
      medicalRecordNo = #{record.medicalRecordNo,jdbcType=CHAR},
      patientID = #{record.patientID,jdbcType=INTEGER},
      patientName = #{record.patientName,jdbcType=VARCHAR},
      IdentityCardNo = #{record.identityCardNo,jdbcType=CHAR},
      age = #{record.age,jdbcType=INTEGER},
      gender = #{record.gender,jdbcType=CHAR},
      birthday = #{record.birthday,jdbcType=TIMESTAMP},
      familyAddress = #{record.familyAddress,jdbcType=VARCHAR},
      medicinesMaterialsID = #{record.medicinesMaterialsID,jdbcType=INTEGER},
      itemsType = #{record.itemsType,jdbcType=INTEGER},
      dosage = #{record.dosage,jdbcType=DECIMAL},
      matOrMedType = #{record.matOrMedType,jdbcType=CHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      tollName = #{record.tollName,jdbcType=VARCHAR},
      appearName = #{record.appearName,jdbcType=VARCHAR},
      changeName = #{record.changeName,jdbcType=VARCHAR},
      feeCategoryName = #{record.feeCategoryName,jdbcType=VARCHAR},
      payStatusName = #{record.payStatusName,jdbcType=VARCHAR},
      dateStatusName = #{record.dateStatusName,jdbcType=VARCHAR},
      itemsTypeName = #{record.itemsTypeName,jdbcType=VARCHAR},
      medOrMatName = #{record.medOrMatName,jdbcType=VARCHAR},
      code = #{record.code,jdbcType=VARCHAR},
      matName = #{record.matName,jdbcType=VARCHAR},
      format = #{record.format,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>