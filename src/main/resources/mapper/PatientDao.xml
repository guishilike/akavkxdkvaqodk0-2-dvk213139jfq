<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.neu.hospital.dao.PatientDao">
  <resultMap id="BaseResultMap" type="edu.neu.hospital.bean.Patient">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="patientName" jdbcType="VARCHAR" property="patientname" />
    <result column="IdentityCardNo" jdbcType="CHAR" property="identitycardno" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="birthday" jdbcType="TIMESTAMP" property="birthday" />
    <result column="familyAddress" jdbcType="VARCHAR" property="familyaddress" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="appearUserID" jdbcType="INTEGER" property="appearuserid" />
    <result column="changeUserID" jdbcType="INTEGER" property="changeuserid" />
    <result column="appearDate" jdbcType="TIMESTAMP" property="appeardate" />
    <result column="changeDate" jdbcType="TIMESTAMP" property="changedate" />
    <result column="reserve1" jdbcType="VARCHAR" property="reserve1" />
    <result column="reserve2" jdbcType="VARCHAR" property="reserve2" />
    <result column="reserve3" jdbcType="VARCHAR" property="reserve3" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, patientName, IdentityCardNo, age, gender, birthday, familyAddress, `status`, 
    appearUserID, changeUserID, appearDate, changeDate, reserve1, reserve2, reserve3
  </sql>
  <select id="selectByExample" parameterType="edu.neu.hospital.example.PatientExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from patient
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from patient
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from patient
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="edu.neu.hospital.example.PatientExample">
    delete from patient
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="edu.neu.hospital.bean.Patient" useGeneratedKeys="true">
    insert into patient (patientName, IdentityCardNo, age, 
      gender, birthday, familyAddress, 
      `status`, appearUserID, changeUserID, 
      appearDate, changeDate, reserve1, 
      reserve2, reserve3)
    values (#{patientname,jdbcType=VARCHAR}, #{identitycardno,jdbcType=CHAR}, #{age,jdbcType=INTEGER}, 
      #{gender,jdbcType=CHAR}, #{birthday,jdbcType=TIMESTAMP}, #{familyaddress,jdbcType=VARCHAR}, 
      #{status,jdbcType=CHAR}, #{appearuserid,jdbcType=INTEGER}, #{changeuserid,jdbcType=INTEGER}, 
      #{appeardate,jdbcType=TIMESTAMP}, #{changedate,jdbcType=TIMESTAMP}, #{reserve1,jdbcType=VARCHAR}, 
      #{reserve2,jdbcType=VARCHAR}, #{reserve3,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="edu.neu.hospital.bean.Patient" useGeneratedKeys="true">
    insert into patient
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="patientname != null">
        patientName,
      </if>
      <if test="identitycardno != null">
        IdentityCardNo,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="familyaddress != null">
        familyAddress,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="appearuserid != null">
        appearUserID,
      </if>
      <if test="changeuserid != null">
        changeUserID,
      </if>
      <if test="appeardate != null">
        appearDate,
      </if>
      <if test="changedate != null">
        changeDate,
      </if>
      <if test="reserve1 != null">
        reserve1,
      </if>
      <if test="reserve2 != null">
        reserve2,
      </if>
      <if test="reserve3 != null">
        reserve3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="patientname != null">
        #{patientname,jdbcType=VARCHAR},
      </if>
      <if test="identitycardno != null">
        #{identitycardno,jdbcType=CHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="familyaddress != null">
        #{familyaddress,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="appearuserid != null">
        #{appearuserid,jdbcType=INTEGER},
      </if>
      <if test="changeuserid != null">
        #{changeuserid,jdbcType=INTEGER},
      </if>
      <if test="appeardate != null">
        #{appeardate,jdbcType=TIMESTAMP},
      </if>
      <if test="changedate != null">
        #{changedate,jdbcType=TIMESTAMP},
      </if>
      <if test="reserve1 != null">
        #{reserve1,jdbcType=VARCHAR},
      </if>
      <if test="reserve2 != null">
        #{reserve2,jdbcType=VARCHAR},
      </if>
      <if test="reserve3 != null">
        #{reserve3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.neu.hospital.example.PatientExample" resultType="java.lang.Long">
    select count(*) from patient
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update patient
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.patientname != null">
        patientName = #{record.patientname,jdbcType=VARCHAR},
      </if>
      <if test="record.identitycardno != null">
        IdentityCardNo = #{record.identitycardno,jdbcType=CHAR},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=CHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.familyaddress != null">
        familyAddress = #{record.familyaddress,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.appearuserid != null">
        appearUserID = #{record.appearuserid,jdbcType=INTEGER},
      </if>
      <if test="record.changeuserid != null">
        changeUserID = #{record.changeuserid,jdbcType=INTEGER},
      </if>
      <if test="record.appeardate != null">
        appearDate = #{record.appeardate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.changedate != null">
        changeDate = #{record.changedate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.reserve1 != null">
        reserve1 = #{record.reserve1,jdbcType=VARCHAR},
      </if>
      <if test="record.reserve2 != null">
        reserve2 = #{record.reserve2,jdbcType=VARCHAR},
      </if>
      <if test="record.reserve3 != null">
        reserve3 = #{record.reserve3,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update patient
    set id = #{record.id,jdbcType=INTEGER},
      patientName = #{record.patientname,jdbcType=VARCHAR},
      IdentityCardNo = #{record.identitycardno,jdbcType=CHAR},
      age = #{record.age,jdbcType=INTEGER},
      gender = #{record.gender,jdbcType=CHAR},
      birthday = #{record.birthday,jdbcType=TIMESTAMP},
      familyAddress = #{record.familyaddress,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=CHAR},
      appearUserID = #{record.appearuserid,jdbcType=INTEGER},
      changeUserID = #{record.changeuserid,jdbcType=INTEGER},
      appearDate = #{record.appeardate,jdbcType=TIMESTAMP},
      changeDate = #{record.changedate,jdbcType=TIMESTAMP},
      reserve1 = #{record.reserve1,jdbcType=VARCHAR},
      reserve2 = #{record.reserve2,jdbcType=VARCHAR},
      reserve3 = #{record.reserve3,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.neu.hospital.bean.Patient">
    update patient
    <set>
      <if test="patientname != null">
        patientName = #{patientname,jdbcType=VARCHAR},
      </if>
      <if test="identitycardno != null">
        IdentityCardNo = #{identitycardno,jdbcType=CHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="familyaddress != null">
        familyAddress = #{familyaddress,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=CHAR},
      </if>
      <if test="appearuserid != null">
        appearUserID = #{appearuserid,jdbcType=INTEGER},
      </if>
      <if test="changeuserid != null">
        changeUserID = #{changeuserid,jdbcType=INTEGER},
      </if>
      <if test="appeardate != null">
        appearDate = #{appeardate,jdbcType=TIMESTAMP},
      </if>
      <if test="changedate != null">
        changeDate = #{changedate,jdbcType=TIMESTAMP},
      </if>
      <if test="reserve1 != null">
        reserve1 = #{reserve1,jdbcType=VARCHAR},
      </if>
      <if test="reserve2 != null">
        reserve2 = #{reserve2,jdbcType=VARCHAR},
      </if>
      <if test="reserve3 != null">
        reserve3 = #{reserve3,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.neu.hospital.bean.Patient">
    update patient
    set patientName = #{patientname,jdbcType=VARCHAR},
      IdentityCardNo = #{identitycardno,jdbcType=CHAR},
      age = #{age,jdbcType=INTEGER},
      gender = #{gender,jdbcType=CHAR},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      familyAddress = #{familyaddress,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=CHAR},
      appearUserID = #{appearuserid,jdbcType=INTEGER},
      changeUserID = #{changeuserid,jdbcType=INTEGER},
      appearDate = #{appeardate,jdbcType=TIMESTAMP},
      changeDate = #{changedate,jdbcType=TIMESTAMP},
      reserve1 = #{reserve1,jdbcType=VARCHAR},
      reserve2 = #{reserve2,jdbcType=VARCHAR},
      reserve3 = #{reserve3,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>