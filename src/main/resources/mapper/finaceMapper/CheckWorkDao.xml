<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.neu.hospital.dao.finaceDao.CheckWorkDao">
  <resultMap id="BaseResultMap" type="edu.neu.hospital.bean.finaceBean.CheckWork">
    <result column="doctorID" jdbcType="INTEGER" property="doctorID" />
    <result column="realName" jdbcType="VARCHAR" property="realName" />
    <result column="deptName" jdbcType="VARCHAR" property="deptName" />
    <result column="medicalRecordID" jdbcType="INTEGER" property="medicalRecordID" />
    <result column="patientName" jdbcType="VARCHAR" property="patientName" />
    <result column="feeCategoryName" jdbcType="VARCHAR" property="feeCategoryName" />
    <result column="fee1" jdbcType="DECIMAL" property="fee1" />
    <result column="fee2" jdbcType="DECIMAL" property="fee2" />
    <result column="feeAppearDate" jdbcType="TIMESTAMP" property="feeAppearDate" />
    <result column="feeID" jdbcType="INTEGER" property="feeID" />
    <result column="tollManID" jdbcType="INTEGER" property="tollManID" />
    <result column="tollmanName" jdbcType="VARCHAR" property="tollmanName" />
    <result column="tollDate" jdbcType="TIMESTAMP" property="tollDate" />
    <result column="payStatus" jdbcType="INTEGER" property="payStatus" />
    <result column="paystatusCode" jdbcType="VARCHAR" property="paystatusCode" />
    <result column="paystatusName" jdbcType="VARCHAR" property="paystatusName" />
    <result column="dateStatus" jdbcType="INTEGER" property="dateStatus" />
    <result column="datestatusCode" jdbcType="VARCHAR" property="datestatusCode" />
    <result column="datestatusName" jdbcType="VARCHAR" property="datestatusName" />
    <result column="checkStatus" jdbcType="VARCHAR" property="checkStatus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    doctorID, realName, deptName, medicalRecordID, patientName, feeCategoryName, fee1, 
    fee2, feeAppearDate, feeID, tollManID, tollmanName, tollDate, payStatus, paystatusCode, 
    paystatusName, dateStatus, datestatusCode, datestatusName, checkStatus
  </sql>
  <select id="selectByExample" parameterType="edu.neu.hospital.example.finaceExample.CheckWorkExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from checkwork
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <delete id="deleteByExample" parameterType="edu.neu.hospital.example.finaceExample.CheckWorkExample">
    delete from checkwork
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.neu.hospital.bean.finaceBean.CheckWork">
    insert into checkwork (doctorID, realName, deptName, 
      medicalRecordID, patientName, feeCategoryName, 
      fee1, fee2, feeAppearDate, 
      feeID, tollManID, tollmanName, 
      tollDate, payStatus, paystatusCode, 
      paystatusName, dateStatus, datestatusCode, 
      datestatusName, checkStatus)
    values (#{doctorID,jdbcType=INTEGER}, #{realName,jdbcType=VARCHAR}, #{deptName,jdbcType=VARCHAR}, 
      #{medicalRecordID,jdbcType=INTEGER}, #{patientName,jdbcType=VARCHAR}, #{feeCategoryName,jdbcType=VARCHAR}, 
      #{fee1,jdbcType=DECIMAL}, #{fee2,jdbcType=DECIMAL}, #{feeAppearDate,jdbcType=TIMESTAMP}, 
      #{feeID,jdbcType=INTEGER}, #{tollManID,jdbcType=INTEGER}, #{tollmanName,jdbcType=VARCHAR}, 
      #{tollDate,jdbcType=TIMESTAMP}, #{payStatus,jdbcType=INTEGER}, #{paystatusCode,jdbcType=VARCHAR}, 
      #{paystatusName,jdbcType=VARCHAR}, #{dateStatus,jdbcType=INTEGER}, #{datestatusCode,jdbcType=VARCHAR}, 
      #{datestatusName,jdbcType=VARCHAR}, #{checkStatus,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="edu.neu.hospital.bean.finaceBean.CheckWork">
    insert into checkwork
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="doctorID != null">
        doctorID,
      </if>
      <if test="realName != null">
        realName,
      </if>
      <if test="deptName != null">
        deptName,
      </if>
      <if test="medicalRecordID != null">
        medicalRecordID,
      </if>
      <if test="patientName != null">
        patientName,
      </if>
      <if test="feeCategoryName != null">
        feeCategoryName,
      </if>
      <if test="fee1 != null">
        fee1,
      </if>
      <if test="fee2 != null">
        fee2,
      </if>
      <if test="feeAppearDate != null">
        feeAppearDate,
      </if>
      <if test="feeID != null">
        feeID,
      </if>
      <if test="tollManID != null">
        tollManID,
      </if>
      <if test="tollmanName != null">
        tollmanName,
      </if>
      <if test="tollDate != null">
        tollDate,
      </if>
      <if test="payStatus != null">
        payStatus,
      </if>
      <if test="paystatusCode != null">
        paystatusCode,
      </if>
      <if test="paystatusName != null">
        paystatusName,
      </if>
      <if test="dateStatus != null">
        dateStatus,
      </if>
      <if test="datestatusCode != null">
        datestatusCode,
      </if>
      <if test="datestatusName != null">
        datestatusName,
      </if>
      <if test="checkStatus != null">
        checkStatus,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="doctorID != null">
        #{doctorID,jdbcType=INTEGER},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="deptName != null">
        #{deptName,jdbcType=VARCHAR},
      </if>
      <if test="medicalRecordID != null">
        #{medicalRecordID,jdbcType=INTEGER},
      </if>
      <if test="patientName != null">
        #{patientName,jdbcType=VARCHAR},
      </if>
      <if test="feeCategoryName != null">
        #{feeCategoryName,jdbcType=VARCHAR},
      </if>
      <if test="fee1 != null">
        #{fee1,jdbcType=DECIMAL},
      </if>
      <if test="fee2 != null">
        #{fee2,jdbcType=DECIMAL},
      </if>
      <if test="feeAppearDate != null">
        #{feeAppearDate,jdbcType=TIMESTAMP},
      </if>
      <if test="feeID != null">
        #{feeID,jdbcType=INTEGER},
      </if>
      <if test="tollManID != null">
        #{tollManID,jdbcType=INTEGER},
      </if>
      <if test="tollmanName != null">
        #{tollmanName,jdbcType=VARCHAR},
      </if>
      <if test="tollDate != null">
        #{tollDate,jdbcType=TIMESTAMP},
      </if>
      <if test="payStatus != null">
        #{payStatus,jdbcType=INTEGER},
      </if>
      <if test="paystatusCode != null">
        #{paystatusCode,jdbcType=VARCHAR},
      </if>
      <if test="paystatusName != null">
        #{paystatusName,jdbcType=VARCHAR},
      </if>
      <if test="dateStatus != null">
        #{dateStatus,jdbcType=INTEGER},
      </if>
      <if test="datestatusCode != null">
        #{datestatusCode,jdbcType=VARCHAR},
      </if>
      <if test="datestatusName != null">
        #{datestatusName,jdbcType=VARCHAR},
      </if>
      <if test="checkStatus != null">
        #{checkStatus,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.neu.hospital.example.finaceExample.CheckWorkExample" resultType="java.lang.Long">
    select count(*) from checkwork
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update checkwork
    <set>
      <if test="record.doctorID != null">
        doctorID = #{record.doctorID,jdbcType=INTEGER},
      </if>
      <if test="record.realName != null">
        realName = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.deptName != null">
        deptName = #{record.deptName,jdbcType=VARCHAR},
      </if>
      <if test="record.medicalRecordID != null">
        medicalRecordID = #{record.medicalRecordID,jdbcType=INTEGER},
      </if>
      <if test="record.patientName != null">
        patientName = #{record.patientName,jdbcType=VARCHAR},
      </if>
      <if test="record.feeCategoryName != null">
        feeCategoryName = #{record.feeCategoryName,jdbcType=VARCHAR},
      </if>
      <if test="record.fee1 != null">
        fee1 = #{record.fee1,jdbcType=DECIMAL},
      </if>
      <if test="record.fee2 != null">
        fee2 = #{record.fee2,jdbcType=DECIMAL},
      </if>
      <if test="record.feeAppearDate != null">
        feeAppearDate = #{record.feeAppearDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.feeID != null">
        feeID = #{record.feeID,jdbcType=INTEGER},
      </if>
      <if test="record.tollManID != null">
        tollManID = #{record.tollManID,jdbcType=INTEGER},
      </if>
      <if test="record.tollmanName != null">
        tollmanName = #{record.tollmanName,jdbcType=VARCHAR},
      </if>
      <if test="record.tollDate != null">
        tollDate = #{record.tollDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payStatus != null">
        payStatus = #{record.payStatus,jdbcType=INTEGER},
      </if>
      <if test="record.paystatusCode != null">
        paystatusCode = #{record.paystatusCode,jdbcType=VARCHAR},
      </if>
      <if test="record.paystatusName != null">
        paystatusName = #{record.paystatusName,jdbcType=VARCHAR},
      </if>
      <if test="record.dateStatus != null">
        dateStatus = #{record.dateStatus,jdbcType=INTEGER},
      </if>
      <if test="record.datestatusCode != null">
        datestatusCode = #{record.datestatusCode,jdbcType=VARCHAR},
      </if>
      <if test="record.datestatusName != null">
        datestatusName = #{record.datestatusName,jdbcType=VARCHAR},
      </if>
      <if test="record.checkStatus != null">
        checkStatus = #{record.checkStatus,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update checkwork
    set doctorID = #{record.doctorID,jdbcType=INTEGER},
      realName = #{record.realName,jdbcType=VARCHAR},
      deptName = #{record.deptName,jdbcType=VARCHAR},
      medicalRecordID = #{record.medicalRecordID,jdbcType=INTEGER},
      patientName = #{record.patientName,jdbcType=VARCHAR},
      feeCategoryName = #{record.feeCategoryName,jdbcType=VARCHAR},
      fee1 = #{record.fee1,jdbcType=DECIMAL},
      fee2 = #{record.fee2,jdbcType=DECIMAL},
      feeAppearDate = #{record.feeAppearDate,jdbcType=TIMESTAMP},
      feeID = #{record.feeID,jdbcType=INTEGER},
      tollManID = #{record.tollManID,jdbcType=INTEGER},
      tollmanName = #{record.tollmanName,jdbcType=VARCHAR},
      tollDate = #{record.tollDate,jdbcType=TIMESTAMP},
      payStatus = #{record.payStatus,jdbcType=INTEGER},
      paystatusCode = #{record.paystatusCode,jdbcType=VARCHAR},
      paystatusName = #{record.paystatusName,jdbcType=VARCHAR},
      dateStatus = #{record.dateStatus,jdbcType=INTEGER},
      datestatusCode = #{record.datestatusCode,jdbcType=VARCHAR},
      datestatusName = #{record.datestatusName,jdbcType=VARCHAR},
      checkStatus = #{record.checkStatus,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>