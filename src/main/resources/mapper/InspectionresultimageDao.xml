<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.neu.hospital.dao.InspectionresultimageDao">
  <resultMap id="BaseResultMap" type="edu.neu.hospital.bean.Inspectionresultimage">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="inspectionResultID" jdbcType="INTEGER" property="inspectionresultid" />
    <result column="catalog" jdbcType="VARCHAR" property="catalog" />
    <result column="appearUserID" jdbcType="INTEGER" property="appearuserid" />
    <result column="changeUserID" jdbcType="INTEGER" property="changeuserid" />
    <result column="appearUserDate" jdbcType="TIMESTAMP" property="appearuserdate" />
    <result column="changeUserDate" jdbcType="TIMESTAMP" property="changeuserdate" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="reserve1" jdbcType="VARCHAR" property="reserve1" />
    <result column="reserve2" jdbcType="VARCHAR" property="reserve2" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="edu.neu.hospital.bean.Inspectionresultimage">
    <result column="imageName" jdbcType="VARBINARY" property="imagename" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, inspectionResultID, `catalog`, appearUserID, changeUserID, appearUserDate, changeUserDate, 
    `status`, reserve1, reserve2
  </sql>
  <sql id="Blob_Column_List">
    imageName
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="edu.neu.hospital.example.InspectionresultimageExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from inspectionresultimage
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByExample" parameterType="edu.neu.hospital.example.InspectionresultimageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from inspectionresultimage
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from inspectionresultimage
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from inspectionresultimage
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="edu.neu.hospital.example.InspectionresultimageExample">
    delete from inspectionresultimage
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="edu.neu.hospital.bean.Inspectionresultimage" useGeneratedKeys="true">
    insert into inspectionresultimage (inspectionResultID, `catalog`, appearUserID, 
      changeUserID, appearUserDate, changeUserDate, 
      `status`, reserve1, reserve2, 
      imageName)
    values (#{inspectionresultid,jdbcType=INTEGER}, #{catalog,jdbcType=VARCHAR}, #{appearuserid,jdbcType=INTEGER}, 
      #{changeuserid,jdbcType=INTEGER}, #{appearuserdate,jdbcType=TIMESTAMP}, #{changeuserdate,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=CHAR}, #{reserve1,jdbcType=VARCHAR}, #{reserve2,jdbcType=VARCHAR}, 
      #{imagename,jdbcType=VARBINARY})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="edu.neu.hospital.bean.Inspectionresultimage" useGeneratedKeys="true">
    insert into inspectionresultimage
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="inspectionresultid != null">
        inspectionResultID,
      </if>
      <if test="catalog != null">
        `catalog`,
      </if>
      <if test="appearuserid != null">
        appearUserID,
      </if>
      <if test="changeuserid != null">
        changeUserID,
      </if>
      <if test="appearuserdate != null">
        appearUserDate,
      </if>
      <if test="changeuserdate != null">
        changeUserDate,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="reserve1 != null">
        reserve1,
      </if>
      <if test="reserve2 != null">
        reserve2,
      </if>
      <if test="imagename != null">
        imageName,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="inspectionresultid != null">
        #{inspectionresultid,jdbcType=INTEGER},
      </if>
      <if test="catalog != null">
        #{catalog,jdbcType=VARCHAR},
      </if>
      <if test="appearuserid != null">
        #{appearuserid,jdbcType=INTEGER},
      </if>
      <if test="changeuserid != null">
        #{changeuserid,jdbcType=INTEGER},
      </if>
      <if test="appearuserdate != null">
        #{appearuserdate,jdbcType=TIMESTAMP},
      </if>
      <if test="changeuserdate != null">
        #{changeuserdate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="reserve1 != null">
        #{reserve1,jdbcType=VARCHAR},
      </if>
      <if test="reserve2 != null">
        #{reserve2,jdbcType=VARCHAR},
      </if>
      <if test="imagename != null">
        #{imagename,jdbcType=VARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.neu.hospital.example.InspectionresultimageExample" resultType="java.lang.Long">
    select count(*) from inspectionresultimage
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update inspectionresultimage
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.inspectionresultid != null">
        inspectionResultID = #{record.inspectionresultid,jdbcType=INTEGER},
      </if>
      <if test="record.catalog != null">
        `catalog` = #{record.catalog,jdbcType=VARCHAR},
      </if>
      <if test="record.appearuserid != null">
        appearUserID = #{record.appearuserid,jdbcType=INTEGER},
      </if>
      <if test="record.changeuserid != null">
        changeUserID = #{record.changeuserid,jdbcType=INTEGER},
      </if>
      <if test="record.appearuserdate != null">
        appearUserDate = #{record.appearuserdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.changeuserdate != null">
        changeUserDate = #{record.changeuserdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.reserve1 != null">
        reserve1 = #{record.reserve1,jdbcType=VARCHAR},
      </if>
      <if test="record.reserve2 != null">
        reserve2 = #{record.reserve2,jdbcType=VARCHAR},
      </if>
      <if test="record.imagename != null">
        imageName = #{record.imagename,jdbcType=VARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update inspectionresultimage
    set id = #{record.id,jdbcType=INTEGER},
      inspectionResultID = #{record.inspectionresultid,jdbcType=INTEGER},
      `catalog` = #{record.catalog,jdbcType=VARCHAR},
      appearUserID = #{record.appearuserid,jdbcType=INTEGER},
      changeUserID = #{record.changeuserid,jdbcType=INTEGER},
      appearUserDate = #{record.appearuserdate,jdbcType=TIMESTAMP},
      changeUserDate = #{record.changeuserdate,jdbcType=TIMESTAMP},
      `status` = #{record.status,jdbcType=CHAR},
      reserve1 = #{record.reserve1,jdbcType=VARCHAR},
      reserve2 = #{record.reserve2,jdbcType=VARCHAR},
      imageName = #{record.imagename,jdbcType=VARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update inspectionresultimage
    set id = #{record.id,jdbcType=INTEGER},
      inspectionResultID = #{record.inspectionresultid,jdbcType=INTEGER},
      `catalog` = #{record.catalog,jdbcType=VARCHAR},
      appearUserID = #{record.appearuserid,jdbcType=INTEGER},
      changeUserID = #{record.changeuserid,jdbcType=INTEGER},
      appearUserDate = #{record.appearuserdate,jdbcType=TIMESTAMP},
      changeUserDate = #{record.changeuserdate,jdbcType=TIMESTAMP},
      `status` = #{record.status,jdbcType=CHAR},
      reserve1 = #{record.reserve1,jdbcType=VARCHAR},
      reserve2 = #{record.reserve2,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.neu.hospital.bean.Inspectionresultimage">
    update inspectionresultimage
    <set>
      <if test="inspectionresultid != null">
        inspectionResultID = #{inspectionresultid,jdbcType=INTEGER},
      </if>
      <if test="catalog != null">
        `catalog` = #{catalog,jdbcType=VARCHAR},
      </if>
      <if test="appearuserid != null">
        appearUserID = #{appearuserid,jdbcType=INTEGER},
      </if>
      <if test="changeuserid != null">
        changeUserID = #{changeuserid,jdbcType=INTEGER},
      </if>
      <if test="appearuserdate != null">
        appearUserDate = #{appearuserdate,jdbcType=TIMESTAMP},
      </if>
      <if test="changeuserdate != null">
        changeUserDate = #{changeuserdate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=CHAR},
      </if>
      <if test="reserve1 != null">
        reserve1 = #{reserve1,jdbcType=VARCHAR},
      </if>
      <if test="reserve2 != null">
        reserve2 = #{reserve2,jdbcType=VARCHAR},
      </if>
      <if test="imagename != null">
        imageName = #{imagename,jdbcType=VARBINARY},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="edu.neu.hospital.bean.Inspectionresultimage">
    update inspectionresultimage
    set inspectionResultID = #{inspectionresultid,jdbcType=INTEGER},
      `catalog` = #{catalog,jdbcType=VARCHAR},
      appearUserID = #{appearuserid,jdbcType=INTEGER},
      changeUserID = #{changeuserid,jdbcType=INTEGER},
      appearUserDate = #{appearuserdate,jdbcType=TIMESTAMP},
      changeUserDate = #{changeuserdate,jdbcType=TIMESTAMP},
      `status` = #{status,jdbcType=CHAR},
      reserve1 = #{reserve1,jdbcType=VARCHAR},
      reserve2 = #{reserve2,jdbcType=VARCHAR},
      imageName = #{imagename,jdbcType=VARBINARY}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.neu.hospital.bean.Inspectionresultimage">
    update inspectionresultimage
    set inspectionResultID = #{inspectionresultid,jdbcType=INTEGER},
      `catalog` = #{catalog,jdbcType=VARCHAR},
      appearUserID = #{appearuserid,jdbcType=INTEGER},
      changeUserID = #{changeuserid,jdbcType=INTEGER},
      appearUserDate = #{appearuserdate,jdbcType=TIMESTAMP},
      changeUserDate = #{changeuserdate,jdbcType=TIMESTAMP},
      `status` = #{status,jdbcType=CHAR},
      reserve1 = #{reserve1,jdbcType=VARCHAR},
      reserve2 = #{reserve2,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>