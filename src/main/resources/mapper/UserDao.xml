<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.neu.hospital.dao.UserDao">
  <resultMap id="BaseResultMap" type="edu.neu.hospital.bean.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userName" jdbcType="VARCHAR" property="userName" />
    <result column="realName" jdbcType="VARCHAR" property="realName" />
    <result column="passwd" jdbcType="VARCHAR" property="passwd" />
    <result column="departmentID" jdbcType="INTEGER" property="departmentID" />
    <result column="userTypeID" jdbcType="INTEGER" property="userTypeID" />
    <result column="rank" jdbcType="INTEGER" property="rank" />
    <result column="isSchedule" jdbcType="CHAR" property="isSchedule" />
    <result column="appearUserID" jdbcType="INTEGER" property="appearUserID" />
    <result column="changeUserID" jdbcType="INTEGER" property="changeUserID" />
    <result column="appearDate" jdbcType="TIMESTAMP" property="appearDate" />
    <result column="changeDate" jdbcType="TIMESTAMP" property="changeDate" />
    <result column="photoLocation" jdbcType="VARCHAR" property="photoLocation" />
    <result column="contact" jdbcType="INTEGER" property="contact" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="reserve1" jdbcType="VARCHAR" property="reserve1" />
    <result column="reserve2" jdbcType="VARCHAR" property="reserve2" />
    <result column="reserve3" jdbcType="VARCHAR" property="reserve3" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, userName, realName, passwd, departmentID, userTypeID, `rank`, isSchedule, appearUserID, 
    changeUserID, appearDate, changeDate, photoLocation, contact, `status`, reserve1, 
    reserve2, reserve3
  </sql>
  <select id="selectByExample" parameterType="edu.neu.hospital.example.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="edu.neu.hospital.example.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="edu.neu.hospital.bean.User" useGeneratedKeys="true">
    insert into user (userName, realName, passwd, 
      departmentID, userTypeID, `rank`, 
      isSchedule, appearUserID, changeUserID, 
      appearDate, changeDate, photoLocation, 
      contact, `status`, reserve1, 
      reserve2, reserve3)
    values (#{userName,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, #{passwd,jdbcType=VARCHAR}, 
      #{departmentID,jdbcType=INTEGER}, #{userTypeID,jdbcType=INTEGER}, #{rank,jdbcType=INTEGER}, 
      #{isSchedule,jdbcType=CHAR}, #{appearUserID,jdbcType=INTEGER}, #{changeUserID,jdbcType=INTEGER}, 
      #{appearDate,jdbcType=TIMESTAMP}, #{changeDate,jdbcType=TIMESTAMP}, #{photoLocation,jdbcType=VARCHAR}, 
      #{contact,jdbcType=INTEGER}, #{status,jdbcType=CHAR}, #{reserve1,jdbcType=VARCHAR}, 
      #{reserve2,jdbcType=VARCHAR}, #{reserve3,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="edu.neu.hospital.bean.User" useGeneratedKeys="true">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userName != null">
        userName,
      </if>
      <if test="realName != null">
        realName,
      </if>
      <if test="passwd != null">
        passwd,
      </if>
      <if test="departmentID != null">
        departmentID,
      </if>
      <if test="userTypeID != null">
        userTypeID,
      </if>
      <if test="rank != null">
        `rank`,
      </if>
      <if test="isSchedule != null">
        isSchedule,
      </if>
      <if test="appearUserID != null">
        appearUserID,
      </if>
      <if test="changeUserID != null">
        changeUserID,
      </if>
      <if test="appearDate != null">
        appearDate,
      </if>
      <if test="changeDate != null">
        changeDate,
      </if>
      <if test="photoLocation != null">
        photoLocation,
      </if>
      <if test="contact != null">
        contact,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="reserve1 != null">
        reserve1,
      </if>
      <if test="reserve2 != null">
        reserve2,
      </if>
      <if test="reserve3 != null">
        reserve3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="passwd != null">
        #{passwd,jdbcType=VARCHAR},
      </if>
      <if test="departmentID != null">
        #{departmentID,jdbcType=INTEGER},
      </if>
      <if test="userTypeID != null">
        #{userTypeID,jdbcType=INTEGER},
      </if>
      <if test="rank != null">
        #{rank,jdbcType=INTEGER},
      </if>
      <if test="isSchedule != null">
        #{isSchedule,jdbcType=CHAR},
      </if>
      <if test="appearUserID != null">
        #{appearUserID,jdbcType=INTEGER},
      </if>
      <if test="changeUserID != null">
        #{changeUserID,jdbcType=INTEGER},
      </if>
      <if test="appearDate != null">
        #{appearDate,jdbcType=TIMESTAMP},
      </if>
      <if test="changeDate != null">
        #{changeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="photoLocation != null">
        #{photoLocation,jdbcType=VARCHAR},
      </if>
      <if test="contact != null">
        #{contact,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="reserve1 != null">
        #{reserve1,jdbcType=VARCHAR},
      </if>
      <if test="reserve2 != null">
        #{reserve2,jdbcType=VARCHAR},
      </if>
      <if test="reserve3 != null">
        #{reserve3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.neu.hospital.example.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null">
        userName = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.realName != null">
        realName = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.passwd != null">
        passwd = #{record.passwd,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentID != null">
        departmentID = #{record.departmentID,jdbcType=INTEGER},
      </if>
      <if test="record.userTypeID != null">
        userTypeID = #{record.userTypeID,jdbcType=INTEGER},
      </if>
      <if test="record.rank != null">
        `rank` = #{record.rank,jdbcType=INTEGER},
      </if>
      <if test="record.isSchedule != null">
        isSchedule = #{record.isSchedule,jdbcType=CHAR},
      </if>
      <if test="record.appearUserID != null">
        appearUserID = #{record.appearUserID,jdbcType=INTEGER},
      </if>
      <if test="record.changeUserID != null">
        changeUserID = #{record.changeUserID,jdbcType=INTEGER},
      </if>
      <if test="record.appearDate != null">
        appearDate = #{record.appearDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.changeDate != null">
        changeDate = #{record.changeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.photoLocation != null">
        photoLocation = #{record.photoLocation,jdbcType=VARCHAR},
      </if>
      <if test="record.contact != null">
        contact = #{record.contact,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.reserve1 != null">
        reserve1 = #{record.reserve1,jdbcType=VARCHAR},
      </if>
      <if test="record.reserve2 != null">
        reserve2 = #{record.reserve2,jdbcType=VARCHAR},
      </if>
      <if test="record.reserve3 != null">
        reserve3 = #{record.reserve3,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=INTEGER},
      userName = #{record.userName,jdbcType=VARCHAR},
      realName = #{record.realName,jdbcType=VARCHAR},
      passwd = #{record.passwd,jdbcType=VARCHAR},
      departmentID = #{record.departmentID,jdbcType=INTEGER},
      userTypeID = #{record.userTypeID,jdbcType=INTEGER},
      `rank` = #{record.rank,jdbcType=INTEGER},
      isSchedule = #{record.isSchedule,jdbcType=CHAR},
      appearUserID = #{record.appearUserID,jdbcType=INTEGER},
      changeUserID = #{record.changeUserID,jdbcType=INTEGER},
      appearDate = #{record.appearDate,jdbcType=TIMESTAMP},
      changeDate = #{record.changeDate,jdbcType=TIMESTAMP},
      photoLocation = #{record.photoLocation,jdbcType=VARCHAR},
      contact = #{record.contact,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=CHAR},
      reserve1 = #{record.reserve1,jdbcType=VARCHAR},
      reserve2 = #{record.reserve2,jdbcType=VARCHAR},
      reserve3 = #{record.reserve3,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.neu.hospital.bean.User">
    update user
    <set>
      <if test="userName != null">
        userName = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        realName = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="passwd != null">
        passwd = #{passwd,jdbcType=VARCHAR},
      </if>
      <if test="departmentID != null">
        departmentID = #{departmentID,jdbcType=INTEGER},
      </if>
      <if test="userTypeID != null">
        userTypeID = #{userTypeID,jdbcType=INTEGER},
      </if>
      <if test="rank != null">
        `rank` = #{rank,jdbcType=INTEGER},
      </if>
      <if test="isSchedule != null">
        isSchedule = #{isSchedule,jdbcType=CHAR},
      </if>
      <if test="appearUserID != null">
        appearUserID = #{appearUserID,jdbcType=INTEGER},
      </if>
      <if test="changeUserID != null">
        changeUserID = #{changeUserID,jdbcType=INTEGER},
      </if>
      <if test="appearDate != null">
        appearDate = #{appearDate,jdbcType=TIMESTAMP},
      </if>
      <if test="changeDate != null">
        changeDate = #{changeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="photoLocation != null">
        photoLocation = #{photoLocation,jdbcType=VARCHAR},
      </if>
      <if test="contact != null">
        contact = #{contact,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=CHAR},
      </if>
      <if test="reserve1 != null">
        reserve1 = #{reserve1,jdbcType=VARCHAR},
      </if>
      <if test="reserve2 != null">
        reserve2 = #{reserve2,jdbcType=VARCHAR},
      </if>
      <if test="reserve3 != null">
        reserve3 = #{reserve3,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.neu.hospital.bean.User">
    update user
    set userName = #{userName,jdbcType=VARCHAR},
      realName = #{realName,jdbcType=VARCHAR},
      passwd = #{passwd,jdbcType=VARCHAR},
      departmentID = #{departmentID,jdbcType=INTEGER},
      userTypeID = #{userTypeID,jdbcType=INTEGER},
      `rank` = #{rank,jdbcType=INTEGER},
      isSchedule = #{isSchedule,jdbcType=CHAR},
      appearUserID = #{appearUserID,jdbcType=INTEGER},
      changeUserID = #{changeUserID,jdbcType=INTEGER},
      appearDate = #{appearDate,jdbcType=TIMESTAMP},
      changeDate = #{changeDate,jdbcType=TIMESTAMP},
      photoLocation = #{photoLocation,jdbcType=VARCHAR},
      contact = #{contact,jdbcType=INTEGER},
      `status` = #{status,jdbcType=CHAR},
      reserve1 = #{reserve1,jdbcType=VARCHAR},
      reserve2 = #{reserve2,jdbcType=VARCHAR},
      reserve3 = #{reserve3,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>