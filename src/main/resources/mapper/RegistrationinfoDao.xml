<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.neu.hospital.dao.RegistrationinfoDao">
  <resultMap id="BaseResultMap" type="edu.neu.hospital.bean.Registrationinfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="medicalRecordID" jdbcType="INTEGER" property="medicalrecordid" />
    <result column="patientID" jdbcType="INTEGER" property="patientid" />
    <result column="registrationLevelID" jdbcType="INTEGER" property="registrationlevelid" />
    <result column="registrationDate" jdbcType="TIMESTAMP" property="registrationdate" />
    <result column="seeDoctorDate" jdbcType="TIMESTAMP" property="seedoctordate" />
    <result column="departmentID" jdbcType="INTEGER" property="departmentid" />
    <result column="doctorID" jdbcType="INTEGER" property="doctorid" />
    <result column="registrationSourceID" jdbcType="INTEGER" property="registrationsourceid" />
    <result column="paymentCategoryID" jdbcType="INTEGER" property="paymentcategoryid" />
    <result column="isSeenDocator" jdbcType="CHAR" property="isseendocator" />
    <result column="expense" jdbcType="DECIMAL" property="expense" />
    <result column="registrationStatus" jdbcType="CHAR" property="registrationstatus" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="appearUserID" jdbcType="INTEGER" property="appearuserid" />
    <result column="appearDate" jdbcType="TIMESTAMP" property="appeardate" />
    <result column="changeUserID" jdbcType="INTEGER" property="changeuserid" />
    <result column="changeDate" jdbcType="TIMESTAMP" property="changedate" />
    <result column="reserve1" jdbcType="VARCHAR" property="reserve1" />
    <result column="reserve2" jdbcType="VARCHAR" property="reserve2" />
    <result column="reserve3" jdbcType="VARCHAR" property="reserve3" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, medicalRecordID, patientID, registrationLevelID, registrationDate, seeDoctorDate, 
    departmentID, doctorID, registrationSourceID, paymentCategoryID, isSeenDocator, expense, 
    registrationStatus, `status`, appearUserID, appearDate, changeUserID, changeDate, 
    reserve1, reserve2, reserve3
  </sql>
  <select id="selectByExample" parameterType="edu.neu.hospital.example.RegistrationinfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from registrationinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from registrationinfo
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from registrationinfo
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="edu.neu.hospital.example.RegistrationinfoExample">
    delete from registrationinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="edu.neu.hospital.bean.Registrationinfo" useGeneratedKeys="true">
    insert into registrationinfo (medicalRecordID, patientID, registrationLevelID, 
      registrationDate, seeDoctorDate, departmentID, 
      doctorID, registrationSourceID, paymentCategoryID, 
      isSeenDocator, expense, registrationStatus, 
      `status`, appearUserID, appearDate, 
      changeUserID, changeDate, reserve1, 
      reserve2, reserve3)
    values (#{medicalrecordid,jdbcType=INTEGER}, #{patientid,jdbcType=INTEGER}, #{registrationlevelid,jdbcType=INTEGER}, 
      #{registrationdate,jdbcType=TIMESTAMP}, #{seedoctordate,jdbcType=TIMESTAMP}, #{departmentid,jdbcType=INTEGER}, 
      #{doctorid,jdbcType=INTEGER}, #{registrationsourceid,jdbcType=INTEGER}, #{paymentcategoryid,jdbcType=INTEGER}, 
      #{isseendocator,jdbcType=CHAR}, #{expense,jdbcType=DECIMAL}, #{registrationstatus,jdbcType=CHAR}, 
      #{status,jdbcType=CHAR}, #{appearuserid,jdbcType=INTEGER}, #{appeardate,jdbcType=TIMESTAMP}, 
      #{changeuserid,jdbcType=INTEGER}, #{changedate,jdbcType=TIMESTAMP}, #{reserve1,jdbcType=VARCHAR}, 
      #{reserve2,jdbcType=VARCHAR}, #{reserve3,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="edu.neu.hospital.bean.Registrationinfo" useGeneratedKeys="true">
    insert into registrationinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="medicalrecordid != null">
        medicalRecordID,
      </if>
      <if test="patientid != null">
        patientID,
      </if>
      <if test="registrationlevelid != null">
        registrationLevelID,
      </if>
      <if test="registrationdate != null">
        registrationDate,
      </if>
      <if test="seedoctordate != null">
        seeDoctorDate,
      </if>
      <if test="departmentid != null">
        departmentID,
      </if>
      <if test="doctorid != null">
        doctorID,
      </if>
      <if test="registrationsourceid != null">
        registrationSourceID,
      </if>
      <if test="paymentcategoryid != null">
        paymentCategoryID,
      </if>
      <if test="isseendocator != null">
        isSeenDocator,
      </if>
      <if test="expense != null">
        expense,
      </if>
      <if test="registrationstatus != null">
        registrationStatus,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="appearuserid != null">
        appearUserID,
      </if>
      <if test="appeardate != null">
        appearDate,
      </if>
      <if test="changeuserid != null">
        changeUserID,
      </if>
      <if test="changedate != null">
        changeDate,
      </if>
      <if test="reserve1 != null">
        reserve1,
      </if>
      <if test="reserve2 != null">
        reserve2,
      </if>
      <if test="reserve3 != null">
        reserve3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="medicalrecordid != null">
        #{medicalrecordid,jdbcType=INTEGER},
      </if>
      <if test="patientid != null">
        #{patientid,jdbcType=INTEGER},
      </if>
      <if test="registrationlevelid != null">
        #{registrationlevelid,jdbcType=INTEGER},
      </if>
      <if test="registrationdate != null">
        #{registrationdate,jdbcType=TIMESTAMP},
      </if>
      <if test="seedoctordate != null">
        #{seedoctordate,jdbcType=TIMESTAMP},
      </if>
      <if test="departmentid != null">
        #{departmentid,jdbcType=INTEGER},
      </if>
      <if test="doctorid != null">
        #{doctorid,jdbcType=INTEGER},
      </if>
      <if test="registrationsourceid != null">
        #{registrationsourceid,jdbcType=INTEGER},
      </if>
      <if test="paymentcategoryid != null">
        #{paymentcategoryid,jdbcType=INTEGER},
      </if>
      <if test="isseendocator != null">
        #{isseendocator,jdbcType=CHAR},
      </if>
      <if test="expense != null">
        #{expense,jdbcType=DECIMAL},
      </if>
      <if test="registrationstatus != null">
        #{registrationstatus,jdbcType=CHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="appearuserid != null">
        #{appearuserid,jdbcType=INTEGER},
      </if>
      <if test="appeardate != null">
        #{appeardate,jdbcType=TIMESTAMP},
      </if>
      <if test="changeuserid != null">
        #{changeuserid,jdbcType=INTEGER},
      </if>
      <if test="changedate != null">
        #{changedate,jdbcType=TIMESTAMP},
      </if>
      <if test="reserve1 != null">
        #{reserve1,jdbcType=VARCHAR},
      </if>
      <if test="reserve2 != null">
        #{reserve2,jdbcType=VARCHAR},
      </if>
      <if test="reserve3 != null">
        #{reserve3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.neu.hospital.example.RegistrationinfoExample" resultType="java.lang.Long">
    select count(*) from registrationinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update registrationinfo
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.medicalrecordid != null">
        medicalRecordID = #{record.medicalrecordid,jdbcType=INTEGER},
      </if>
      <if test="record.patientid != null">
        patientID = #{record.patientid,jdbcType=INTEGER},
      </if>
      <if test="record.registrationlevelid != null">
        registrationLevelID = #{record.registrationlevelid,jdbcType=INTEGER},
      </if>
      <if test="record.registrationdate != null">
        registrationDate = #{record.registrationdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.seedoctordate != null">
        seeDoctorDate = #{record.seedoctordate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.departmentid != null">
        departmentID = #{record.departmentid,jdbcType=INTEGER},
      </if>
      <if test="record.doctorid != null">
        doctorID = #{record.doctorid,jdbcType=INTEGER},
      </if>
      <if test="record.registrationsourceid != null">
        registrationSourceID = #{record.registrationsourceid,jdbcType=INTEGER},
      </if>
      <if test="record.paymentcategoryid != null">
        paymentCategoryID = #{record.paymentcategoryid,jdbcType=INTEGER},
      </if>
      <if test="record.isseendocator != null">
        isSeenDocator = #{record.isseendocator,jdbcType=CHAR},
      </if>
      <if test="record.expense != null">
        expense = #{record.expense,jdbcType=DECIMAL},
      </if>
      <if test="record.registrationstatus != null">
        registrationStatus = #{record.registrationstatus,jdbcType=CHAR},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.appearuserid != null">
        appearUserID = #{record.appearuserid,jdbcType=INTEGER},
      </if>
      <if test="record.appeardate != null">
        appearDate = #{record.appeardate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.changeuserid != null">
        changeUserID = #{record.changeuserid,jdbcType=INTEGER},
      </if>
      <if test="record.changedate != null">
        changeDate = #{record.changedate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.reserve1 != null">
        reserve1 = #{record.reserve1,jdbcType=VARCHAR},
      </if>
      <if test="record.reserve2 != null">
        reserve2 = #{record.reserve2,jdbcType=VARCHAR},
      </if>
      <if test="record.reserve3 != null">
        reserve3 = #{record.reserve3,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update registrationinfo
    set id = #{record.id,jdbcType=INTEGER},
      medicalRecordID = #{record.medicalrecordid,jdbcType=INTEGER},
      patientID = #{record.patientid,jdbcType=INTEGER},
      registrationLevelID = #{record.registrationlevelid,jdbcType=INTEGER},
      registrationDate = #{record.registrationdate,jdbcType=TIMESTAMP},
      seeDoctorDate = #{record.seedoctordate,jdbcType=TIMESTAMP},
      departmentID = #{record.departmentid,jdbcType=INTEGER},
      doctorID = #{record.doctorid,jdbcType=INTEGER},
      registrationSourceID = #{record.registrationsourceid,jdbcType=INTEGER},
      paymentCategoryID = #{record.paymentcategoryid,jdbcType=INTEGER},
      isSeenDocator = #{record.isseendocator,jdbcType=CHAR},
      expense = #{record.expense,jdbcType=DECIMAL},
      registrationStatus = #{record.registrationstatus,jdbcType=CHAR},
      `status` = #{record.status,jdbcType=CHAR},
      appearUserID = #{record.appearuserid,jdbcType=INTEGER},
      appearDate = #{record.appeardate,jdbcType=TIMESTAMP},
      changeUserID = #{record.changeuserid,jdbcType=INTEGER},
      changeDate = #{record.changedate,jdbcType=TIMESTAMP},
      reserve1 = #{record.reserve1,jdbcType=VARCHAR},
      reserve2 = #{record.reserve2,jdbcType=VARCHAR},
      reserve3 = #{record.reserve3,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.neu.hospital.bean.Registrationinfo">
    update registrationinfo
    <set>
      <if test="medicalrecordid != null">
        medicalRecordID = #{medicalrecordid,jdbcType=INTEGER},
      </if>
      <if test="patientid != null">
        patientID = #{patientid,jdbcType=INTEGER},
      </if>
      <if test="registrationlevelid != null">
        registrationLevelID = #{registrationlevelid,jdbcType=INTEGER},
      </if>
      <if test="registrationdate != null">
        registrationDate = #{registrationdate,jdbcType=TIMESTAMP},
      </if>
      <if test="seedoctordate != null">
        seeDoctorDate = #{seedoctordate,jdbcType=TIMESTAMP},
      </if>
      <if test="departmentid != null">
        departmentID = #{departmentid,jdbcType=INTEGER},
      </if>
      <if test="doctorid != null">
        doctorID = #{doctorid,jdbcType=INTEGER},
      </if>
      <if test="registrationsourceid != null">
        registrationSourceID = #{registrationsourceid,jdbcType=INTEGER},
      </if>
      <if test="paymentcategoryid != null">
        paymentCategoryID = #{paymentcategoryid,jdbcType=INTEGER},
      </if>
      <if test="isseendocator != null">
        isSeenDocator = #{isseendocator,jdbcType=CHAR},
      </if>
      <if test="expense != null">
        expense = #{expense,jdbcType=DECIMAL},
      </if>
      <if test="registrationstatus != null">
        registrationStatus = #{registrationstatus,jdbcType=CHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=CHAR},
      </if>
      <if test="appearuserid != null">
        appearUserID = #{appearuserid,jdbcType=INTEGER},
      </if>
      <if test="appeardate != null">
        appearDate = #{appeardate,jdbcType=TIMESTAMP},
      </if>
      <if test="changeuserid != null">
        changeUserID = #{changeuserid,jdbcType=INTEGER},
      </if>
      <if test="changedate != null">
        changeDate = #{changedate,jdbcType=TIMESTAMP},
      </if>
      <if test="reserve1 != null">
        reserve1 = #{reserve1,jdbcType=VARCHAR},
      </if>
      <if test="reserve2 != null">
        reserve2 = #{reserve2,jdbcType=VARCHAR},
      </if>
      <if test="reserve3 != null">
        reserve3 = #{reserve3,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.neu.hospital.bean.Registrationinfo">
    update registrationinfo
    set medicalRecordID = #{medicalrecordid,jdbcType=INTEGER},
      patientID = #{patientid,jdbcType=INTEGER},
      registrationLevelID = #{registrationlevelid,jdbcType=INTEGER},
      registrationDate = #{registrationdate,jdbcType=TIMESTAMP},
      seeDoctorDate = #{seedoctordate,jdbcType=TIMESTAMP},
      departmentID = #{departmentid,jdbcType=INTEGER},
      doctorID = #{doctorid,jdbcType=INTEGER},
      registrationSourceID = #{registrationsourceid,jdbcType=INTEGER},
      paymentCategoryID = #{paymentcategoryid,jdbcType=INTEGER},
      isSeenDocator = #{isseendocator,jdbcType=CHAR},
      expense = #{expense,jdbcType=DECIMAL},
      registrationStatus = #{registrationstatus,jdbcType=CHAR},
      `status` = #{status,jdbcType=CHAR},
      appearUserID = #{appearuserid,jdbcType=INTEGER},
      appearDate = #{appeardate,jdbcType=TIMESTAMP},
      changeUserID = #{changeuserid,jdbcType=INTEGER},
      changeDate = #{changedate,jdbcType=TIMESTAMP},
      reserve1 = #{reserve1,jdbcType=VARCHAR},
      reserve2 = #{reserve2,jdbcType=VARCHAR},
      reserve3 = #{reserve3,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>